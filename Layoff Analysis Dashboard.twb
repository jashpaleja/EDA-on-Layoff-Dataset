<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0611.2007                               -->
<workbook original-version='18.1' source-build='2023.2.0 (20232.23.0611.2007)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='updated' inline='true' name='federated.1272l9t14bginz1d29smo0nxounc' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='updated' name='textscan.13juu6x01lzpl01go3nvx1xv3172'>
            <connection class='textscan' directory='/Users/jashpaleja/Desktop/Data Science/Projects/EAS 503 Project' filename='updated.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.13juu6x01lzpl01go3nvx1xv3172' name='updated.csv' table='[updated#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Company' ordinal='1' />
            <column datatype='string' name='Location_HQ' ordinal='2' />
            <column datatype='string' name='Industry' ordinal='3' />
            <column datatype='real' name='Percentage' ordinal='4' />
            <column datatype='date' name='Date' ordinal='5' />
            <column datatype='real' name='Funds_Raised' ordinal='6' />
            <column datatype='string' name='Stage' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='real' name='Laid_Off_Count' ordinal='9' />
            <column datatype='integer' name='StageID' ordinal='10' />
            <column datatype='integer' name='Country_ID' ordinal='11' />
            <column datatype='integer' name='Industry_ID' ordinal='12' />
            <column datatype='integer' name='Location_HQ_ID' ordinal='13' />
            <column datatype='integer' name='Company_ID' ordinal='14' />
            <column datatype='integer' name='Total_Employee' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.13juu6x01lzpl01go3nvx1xv3172' name='updated.csv' table='[updated#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Company' ordinal='1' />
            <column datatype='string' name='Location_HQ' ordinal='2' />
            <column datatype='string' name='Industry' ordinal='3' />
            <column datatype='real' name='Percentage' ordinal='4' />
            <column datatype='date' name='Date' ordinal='5' />
            <column datatype='real' name='Funds_Raised' ordinal='6' />
            <column datatype='string' name='Stage' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='real' name='Laid_Off_Count' ordinal='9' />
            <column datatype='integer' name='StageID' ordinal='10' />
            <column datatype='integer' name='Country_ID' ordinal='11' />
            <column datatype='integer' name='Industry_ID' ordinal='12' />
            <column datatype='integer' name='Location_HQ_ID' ordinal='13' />
            <column datatype='integer' name='Company_ID' ordinal='14' />
            <column datatype='integer' name='Total_Employee' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[updated.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[updated.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[updated.csv_035549C574B04212862D8786C7C7181D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Company</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Company]</local-name>
            <parent-name>[updated.csv]</parent-name>
            <remote-alias>Company</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[updated.csv_035549C574B04212862D8786C7C7181D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location_HQ</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Location_HQ]</local-name>
            <parent-name>[updated.csv]</parent-name>
            <remote-alias>Location_HQ</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[updated.csv_035549C574B04212862D8786C7C7181D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Industry</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Industry]</local-name>
            <parent-name>[updated.csv]</parent-name>
            <remote-alias>Industry</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[updated.csv_035549C574B04212862D8786C7C7181D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percentage]</local-name>
            <parent-name>[updated.csv]</parent-name>
            <remote-alias>Percentage</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[updated.csv_035549C574B04212862D8786C7C7181D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[updated.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[updated.csv_035549C574B04212862D8786C7C7181D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Funds_Raised</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Funds_Raised]</local-name>
            <parent-name>[updated.csv]</parent-name>
            <remote-alias>Funds_Raised</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[updated.csv_035549C574B04212862D8786C7C7181D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stage</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Stage]</local-name>
            <parent-name>[updated.csv]</parent-name>
            <remote-alias>Stage</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[updated.csv_035549C574B04212862D8786C7C7181D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[updated.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[updated.csv_035549C574B04212862D8786C7C7181D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Laid_Off_Count</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Laid_Off_Count]</local-name>
            <parent-name>[updated.csv]</parent-name>
            <remote-alias>Laid_Off_Count</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[updated.csv_035549C574B04212862D8786C7C7181D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>StageID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[StageID]</local-name>
            <parent-name>[updated.csv]</parent-name>
            <remote-alias>StageID</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[updated.csv_035549C574B04212862D8786C7C7181D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Country_ID]</local-name>
            <parent-name>[updated.csv]</parent-name>
            <remote-alias>Country_ID</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[updated.csv_035549C574B04212862D8786C7C7181D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Industry_ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Industry_ID]</local-name>
            <parent-name>[updated.csv]</parent-name>
            <remote-alias>Industry_ID</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[updated.csv_035549C574B04212862D8786C7C7181D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location_HQ_ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Location_HQ_ID]</local-name>
            <parent-name>[updated.csv]</parent-name>
            <remote-alias>Location_HQ_ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[updated.csv_035549C574B04212862D8786C7C7181D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Company_ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Company_ID]</local-name>
            <parent-name>[updated.csv]</parent-name>
            <remote-alias>Company_ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[updated.csv_035549C574B04212862D8786C7C7181D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Employee</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_Employee]</local-name>
            <parent-name>[updated.csv]</parent-name>
            <remote-alias>Total_Employee</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[updated.csv_035549C574B04212862D8786C7C7181D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Top 10' datatype='boolean' name='[Calculation_860680167412703232]' role='measure' type='nominal'>
        <calculation class='tableau' formula='INDEX() &lt;= 10'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Percentage_Laidoff' datatype='real' name='[Calculation_860680167413932033]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Laid_Off_Count])/SUM([Total_Employee])) * 100' />
      </column>
      <column caption='One' datatype='integer' name='[Calculation_860680168123265041]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Company]' role='dimension' type='nominal' />
      <column caption='Company ID' datatype='integer' name='[Company_ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[Country]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Singapore&quot;'>
            <value>&quot;Singapore&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Country ID' datatype='integer' name='[Country_ID]' role='dimension' type='ordinal' />
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column caption='Funds Raised' datatype='real' name='[Funds_Raised]' role='measure' type='quantitative' />
      <column datatype='string' name='[Industry]' role='dimension' type='nominal' />
      <column caption='Industry ID' datatype='integer' name='[Industry_ID]' role='dimension' type='ordinal' />
      <column caption='Laid Off Count' datatype='real' name='[Laid_Off_Count]' role='measure' type='quantitative' />
      <column caption='Location HQ' datatype='string' name='[Location_HQ]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Location HQ ID' datatype='integer' name='[Location_HQ_ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Percentage]' role='measure' type='quantitative' />
      <column caption='Stage ID' datatype='integer' name='[StageID]' role='dimension' type='ordinal' />
      <column caption='Top 20' datatype='boolean' name='[Top 10 (copy)_860680168065298444]' role='measure' type='nominal'>
        <calculation class='tableau' formula='RANK(&apos;desc&apos;) &lt;= 20'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Total Employee' datatype='integer' name='[Total_Employee]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='updated.csv' datatype='table' name='[__tableau_internal_object_id__].[updated.csv_035549C574B04212862D8786C7C7181D]' role='measure' type='quantitative' />
      <column-instance column='[Percentage]' derivation='Attribute' name='[attr:Percentage:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Percentage]' derivation='Avg' name='[avg:Percentage:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Percentage]' derivation='CountD' name='[ctd:Percentage:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Laid_Off_Count]' derivation='Sum' name='[diff:sum:Laid_Off_Count:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Country]' derivation='Max' name='[max:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location_HQ]' derivation='None' name='[none:Location_HQ:nk]' pivot='key' type='nominal' />
      <column-instance column='[Percentage]' derivation='None' name='[none:Percentage:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Laid_Off_Count]' derivation='Sum' name='[pcdf:sum:Laid_Off_Count:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Laid_Off_Count]' derivation='Sum' name='[pcrk:sum:Laid_Off_Count:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[Laid_Off_Count]' derivation='Sum' name='[pcto:sum:Laid_Off_Count:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Laid_Off_Count]' derivation='Sum' name='[pcto:sum:Laid_Off_Count:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Laid_Off_Count]' derivation='Sum' name='[pcto:sum:Laid_Off_Count:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1272l9t14bginz1d29smo0nxounc].[Country]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Laid_Off_Count]' derivation='Sum' name='[pcto:sum:Laid_Off_Count:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[Laid_Off_Count]' derivation='Sum' name='[pcto:sum:Laid_Off_Count:qk:6]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Table' type='PctTotal' />
      </column-instance>
      <column-instance column='[Laid_Off_Count]' derivation='Sum' name='[pcto:sum:Laid_Off_Count:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Laid_Off_Count]' derivation='Sum' name='[pcva:sum:Laid_Off_Count:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Table' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Laid_Off_Count]' derivation='Sum' name='[pcva:sum:Laid_Off_Count:qk:3]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Laid_Off_Count]' derivation='Sum' name='[pcva:sum:Laid_Off_Count:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Laid_Off_Count]' derivation='Sum' name='[sum:Laid_Off_Count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Percentage]' derivation='Sum' name='[sum:Percentage:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total_Employee]' derivation='Sum' name='[sum:Total_Employee:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_860680167413932033]' derivation='User' name='[usr:Calculation_860680167413932033:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location_HQ:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Barcelona&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Copenhagen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jakarta&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico City&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stamford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ahmedabad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Buenos Aires&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frankfurt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lisbon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nebraska City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Santiago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wellington&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Auckland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hamburg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oslo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SF Bay Area&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bengaluru&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Karlsruhe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pune&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tel Aviv&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Beijing&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curitiba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jerusalem&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Stockholm&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Helsinki&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Madrid&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ottawa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Shanghai&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brisbane&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ferdericton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Washington D.C.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Amsterdam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gothenburg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;New Delhi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sao Paulo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Boston&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kuala Lumpur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Munich&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vienna&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malmo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oxford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Berlin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kfar Saba&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montreal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tokyo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Blumenau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kiel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Moscow&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Toronto&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Boulder&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Edinburgh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lagos&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nairobi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Walldorf&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Florianópolis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Belo Horizonte&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dakar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Joinville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pittsburgh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sydney&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bangkok&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paris&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Calgary&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guadalajara&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;London&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zurich&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dubai&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kitchener&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mumbai&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bend&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kansas City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tallinn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chennai&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gurugram&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Non-U.S.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Seoul&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' palette='green_10_0' type='palette'>
            <map to='#24693d'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#246c3d'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#25703d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#26733d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#27773d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#2a7a3f'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#2c7e41'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#2e8142'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#328445'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#378848'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#3c8b4a'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#408e4d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#44924e'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#48954f'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#4c9850'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#509c51'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#559f52'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#59a253'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#5ea654'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#61a957'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#64ac5a'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#68b05d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#6bb360'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#6fb764'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#73ba67'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#77be6b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#7bc16e'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#7fc572'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#83c976'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#88cc79'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#8dcf7e'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#92d282'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#97d586'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9dd88d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#a4db95'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#abdd9d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b3e0a6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[max:Country:nk]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#6394bd'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#6a9bc4'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#95c2e1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Industry:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fitness&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Travel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aerospace&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Product&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Data&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sales&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;HR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Food&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Education&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Security&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Media&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Construction&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Real Estate&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Manufacturing&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Energy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Support&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Infrastructure&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Legal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marketing&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hardware&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Finance&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Transportation&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Consumer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Recruiting&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Logistics&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Healthcare&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Crypto&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Retail&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Company:nk]' palette='green_orange_cyan_yellow_10_0' type='palette'>
            <map to='#3ca8bc'>
              <bucket>&quot;Loft&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;&amp;Open&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;AlayaCare&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Aqgromalin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Avidbots&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BigCommerce&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BookClub&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Britishvolt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Candy Digital&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Checkmarx&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clearco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ConsenSys&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Culture Trip&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DialSource&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dynamic Signal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Enjoei&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Facily&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Flywire&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gemini&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;GoPro&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gympass&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HopSkipDrive&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Impossible Foods copy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;IRL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kaleidoscope&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Komodo Health&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lending Club&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Loftsmart&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Matrixport&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Miro&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nate&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NYDIG&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Optimizely&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Parler&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Personetics&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pollen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Qumulo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Revelate&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sage Therapeutics&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ServiceTitan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Skyscanner&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Spin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;StreamElements&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Synergysuite&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;The Mom Project&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tomorrow&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Truepill&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ula&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vee&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;VTEX&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wish&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yojak&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zoox&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1stdibs&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ahead&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Anchorage Digital&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Atsu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benevity&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BlackLine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Breather&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Buy.com / Rakuten&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Carvana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Citrine Informatics&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Coinbase&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Crossbeam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DealShare&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DraftKings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Electric&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Examedi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Flexport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Freshworks&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GoBear&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Groupon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hippo Insurance&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iflix&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Instructure&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;JOKR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kitty Hawk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lawgeex&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Linkfire&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lyst&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Metromile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Movidesk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Notarize&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;OneTrust&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oye Rickshaw&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PeerStreet&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Playdots&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Q4&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;REE Automotive&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Root Insurance&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Scoop&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Simple Feast&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sojern&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Stashaway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Swappie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Teampay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tickertape&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ualá&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Upstart&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;View&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wejo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Worksmith&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zilingo&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;Blend&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;10X Genomics&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Airtasker&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Apartment List&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aura&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bevi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Blueground&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bright Machines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cadre&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Celsius&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ClassPass&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Community Gaming&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CS Disco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Delivery Hero&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dropp&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Elinvar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Exterro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Flockjay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Funding Societies&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gojek&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guideline&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Homie&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Immersive Labs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Intuit&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jumpcloud&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Knotel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LearnUpon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LivePerson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MakeMyTrip&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Milkrun&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MyGate&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NuoDB&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Openpay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PaisaBazaar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Perimeter 81&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pluralsight&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Quanterix&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Remote Year&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rubius&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SEND&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sisense&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sonos&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;StockX&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Swyft&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Textio&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tipalti&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TripleLift&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Udaan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;uShip&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vox Media&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wheel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Xiaohongshu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zomato&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Acko&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alteryx&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Armis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;B8ta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bishop Fox&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Borrowell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Builder&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Carbon Health&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chief&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Clinc&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Convene&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cybereason&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dock&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eatsy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;EquityZen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fate Therapeutics&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Forma.ai&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GitLab&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GoTo Group&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Headspace&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hubba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Industrious&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jam City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kayak / OpenTable&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kry&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lever&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Loop&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MediBuddy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moglix&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Netflix&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Okta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Otonomo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Patreon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pie Insurance&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Postmates&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Reali&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ribbon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salsify&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Shipsi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Smartsheet&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Springbig&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Submittable&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tally&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TheSkimm&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tor&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uncapped&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Verbit&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wonolo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zeitgold&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zwift&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;\#Paid&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Albert&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aqua Security&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Avo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BigPanda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BookMyShow&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Briza&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Canoo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Checkout.com&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clearcover&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Consider.co&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CureFit&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DigitalOcean&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Earnin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Enjoy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Faire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Food52&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Getaround&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gopuff&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Happay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Horizn Studios&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Incredible Health&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;iRobot&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kaltura&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kontist&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lendingkart&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Loggi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Matterport&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Misfits Market&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Navi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nylas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;OrCam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Parsable&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PickYourTrail&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Polly&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rad Power Bikes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Revolut&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saks.com&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Shakepay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slite&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Splunk&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Stripe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Synthego&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;The Predictive Index&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tonal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Truiloo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Unacademy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Veev&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;WalkMe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wix&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yotpo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zscaler&quot;</bucket>
            </map>
            <map to='#87d180'>
              <bucket>&quot;Bounce&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;23andMe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Airtime&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;App Annie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Autograph&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Beyond Meat&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bluprint&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bright Money&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Calibrate&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cerebral&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clear&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Compass&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CTO.ai&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Demandbase&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dukaan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Embark Trucks&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ezCater&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Flyhomes&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;G2&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gong&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guild&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;HOOQ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Immutable&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Involves&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Juni&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kodiak Robotics&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Legible&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Livspace&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malwarebytes&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MindBody&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;N26&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nuri&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;OpenWeb&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palantir&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Perion&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pocket Aces&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Quanto&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;RenoRun&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rupeek&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sendle&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Skai&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sophos&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Stord&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Symend&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;The Athletic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Titan Medical&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TRM Labs&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Udacity&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vacasa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Voyage SMS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;When I Work&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yahoo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zoom&quot;</bucket>
            </map>
            <map to='#94a323'>
              <bucket>&quot;Pear Therapeutics&quot;</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>&quot;Lyft&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;AEye&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Amplero&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Atlassian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bench&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bitwise&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brave Care&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Butler Hospitality&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cars24&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chrono24&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Coding Dojo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Credit Sesame&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DataRails&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DoorDash&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;eGym&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eventbrite&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fittr&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;FreshBooks&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Highsnobiety&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;iCAD&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Inspirato&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jiobit&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kinde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Latch&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lime&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lusha&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Meta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Moss&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Noom&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;On Deck&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Overtime&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pecan AI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Planetly&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Protocol Labs&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rock Content&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sauce Labs&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Similarweb&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SoFi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Stash&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Superhuman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Teachmint&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Thriver&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trax&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Twist Bioscience&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;UpScalio&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Viasat&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wealthsimple&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Workmotion&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ZestMoney&quot;</bucket>
            </map>
            <map to='#a08400'>
              <bucket>&quot;Swiggy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;2TM&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Airbnb&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Andela&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AU10TIX&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Berlin Brands Group&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brex&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BuzzFeed&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Carwow&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cityblock Health&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CoinJar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CrowdStreet&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Deliv&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dragos&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Electronic Arts&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Exodus&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Flink&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Frontdesk&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GoBolt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grover&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hireology&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;iFood&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Integral Ad Science&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jumia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Klarna&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LEAD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Linktree&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MadeiraMadeira&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MFine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozilla&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NS8&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;OneWeb&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pacaso&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peloton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pleo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qualtrics&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Reef&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rover&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SecureWorks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SIRCLO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Soluto&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Stay Alfred&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sweetgreen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TechTarget&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tier Mobility&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TripActions&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Upwork&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Virgin Hyperloop&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Welkin Health&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Woven&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zillow&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Addepar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Amount&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Astra&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Baton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bitso&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Branch&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buser&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CarGurus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chope&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CNET&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Course Hero&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dapper Labs&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Domestika&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eden / Managed By Q&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;eToro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Finleap Connect&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Foxtrot&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Glitch&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greenhouse&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Heroes&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hyperscience&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Innovaccer&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jetty&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kiavi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ladder Life&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lightricks&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lunchbox&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mejuri&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Momentive&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niantic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Olo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Outschool&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PayPal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pitch&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Procore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Reddit&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rivian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sandbox VR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Showpad&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Snyk&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Stack Overflow&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sunday&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Taxfix&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thoughtworks&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Transmit Security&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Twilio&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Unity&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vesalius Therapeutics&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Waymo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Workday&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zenoti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;54gene&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ajaib&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AppLovin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Automation Anywhere&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BeyondMinds&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brighte&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Calm&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chainalysis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Clearbanc&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Compete&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cue Health&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Deputy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dunzo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Embroker&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FabHotels&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Flytedesk&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gather&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GoodRx&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GumGum&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hootsuite&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Impala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;iPrice Group&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Juul&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Koho&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lemon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marketforce&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Minted&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Namely&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nuro&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;OpenX&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Panda Squad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PerkSpot&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pocketmath&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Quidax&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Repertoire Immune Medicines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sabre&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sendy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Skedulo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SoundHound&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Storytel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SynapseFI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;The Grommet&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Toast&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TrueCar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Udayy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Varonis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vroom&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;WHOOP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yelp&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ZoomInfo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ada&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Alto Pharmacy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Arrival&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Back Market&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BitMEX&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Built In&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Careem&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chigari&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cloudinary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Convoy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CyCognito&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Docly&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ebanx&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ericsson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fetch&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Forto&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gitpod&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grab&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HealthMatch&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hubilo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Infarm&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jama&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;KeepTruckin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kuda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liftoff&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Loopio&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Meero&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mogo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Netlify&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ola&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;OutboundEngine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pavilion Data&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pier&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Preply&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;RealSelf&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ridecell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sami&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shogun&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Smava&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sprinklr&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Substack&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tamara Mellon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Thimble&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TouchBistro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TuSimple&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Unico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Veriff&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wave Sports and Entertainment&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wordstream&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zencity&quot;</bucket>
            </map>
            <map to='#c3ce3d'>
              <bucket>&quot;Redfin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ada Support&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Amazon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Arrive Logistics&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Banxa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BitOasis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BounceX&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bullish&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Career Karma&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chime&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Clue&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cornershop&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;D2iQ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DocuSign&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;eBay&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ermetic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fifth Season&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Forward&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Glassdoor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GrayMeta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Healthy.io&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HubSpot&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;InfluxData&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;JD.ID&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kenoby&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kueski&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lighter Capital&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LoopMe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Meesho&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mojocare&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Relic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Olive&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Outbrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PayFit&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pipedrive&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Primer&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Recharge&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;RigUp&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Samsara&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shop101&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Snap&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spyce&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SummerBio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TaskUs&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Thinkific&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TradeWindow&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TutorMundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uniphore&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Verily&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wayfair&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Workable&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zendesk&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AdRoll&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Amperity&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Astronomer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Beam Benefits&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BitTitan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Branch Metrics&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bustle Digital Group&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Carousell&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ChowNow&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Code42&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Crayon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Domo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Edgio&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eucalyptus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fireblocks&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Freetrade&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gloat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greenlight&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hibob&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ibotta&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Innovid&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jimdo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kickstarter&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lastline&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lightspeed Commerce&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luno&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mercos&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Monzo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nomad Health&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Omie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Outside&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Plaid&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Project44&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Redesign Health&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Robinhood&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SAP&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sidecar Health&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Socure&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Starry&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SundaySky&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;TCR2&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thread&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;TravelTriangle&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Twine Solutions&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Unstoppable Domains&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vezeeta&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Waze&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Workhuman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zepz&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Affirm&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Amplitude&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;AtoB&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Benchling&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bizzabo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Breathe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Button&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Carta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cisco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cogito&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Crejo.Fun&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DataRobot&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Eightfold AI&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Everlane&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fiverr&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Freshbooks&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Glovo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Group Nine Media&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Highspot&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;iFit&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Instamojo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jobcase&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kitopi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lattice&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LinkedIn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Metigy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Motive&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nori&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;OneFootball&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;OwnBackup&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Peerspace&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Plato&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Puppet&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Redox&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roku&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ScaleFactor&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Simpl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Software AG&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Stash Financial&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Superpedestrian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;TealBook&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thumbtack&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Treehouse&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Twitter&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;UPshow&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;VideoAmp&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Weee!&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;WorkRamp&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zeus Living&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Abra&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alice&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Argo AI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Away&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BioMarin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Boost&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bryter&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Capitolis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Checkr&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CleverTap&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ContaAzul&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Curve&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Divergent 3D&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Earnix&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Envoy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;FanClash&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Foodsby&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GetNinjas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gorillas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Happy Money&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hotmart&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;InDebted&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iron Ox&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Karma&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Koo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lendis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lokalise&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maven&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mixpanel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;nCino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ocavu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oriente&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PartnerStack&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pico Interactive&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Polygon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rapid&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rhino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Salesforce&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ShareChat&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Smallcase&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SpotHero&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Studio&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Syte&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;The RealReal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tonkean&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Trybe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Unbabel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vendease&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;WanderJaunt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wonder&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zak&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zume&quot;</bucket>
            </map>
            <map to='#ef8a0c'>
              <bucket>&quot;Doma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;99&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Akamai&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ApplyBoard&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;AvantStay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BharatAgri&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bonsai&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bringg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cameo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chargebee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ClearCo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Confluent&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Culture Amp&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Descartes Labs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dutchie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Emotive&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fabric&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Flywheel Sports&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gem&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Google&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gusto&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hopin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Impossible Foods&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iris Nova&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kabam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;KoinWorks&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lemonade&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Loftium&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MasterClass&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Minute Media&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Namogoo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nutanix&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oportun&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Permutive&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PolicyGenius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;QuintoAndar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ResearchGate&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SafeGraph&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sensibill&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Skillz&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sourcegraph&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stream&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Synapsica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;The Guild&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tomo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TrueLayer&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;UiPath&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vedantu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;VSCO&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wildlife Studios&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ynsect&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zoomo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;6sense&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Airmeet&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anodot&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AudioCodes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bestow&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Blockchain.com&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bridge Connector&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Byju&apos;s&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Casper&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CityMall&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coinsquare&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cruise&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Deliveroo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Drip Capital&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Element AI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Exotel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Flipboard&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FrontRow&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GoDaddy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grubhub&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hologram&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ike&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Intercom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jumio&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Klook&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LeafLink&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lithic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Magic Leap&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Micron&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mural&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NSO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Opencare&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Packable&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pendo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pliops&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Quandoo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Relativity&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rows&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Segment&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SirionLabs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sonatype&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Stedi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Teladoc Health&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TIFIN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TripAdvisor&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uber Freight&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Urban Sports Club&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Voi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Western Digital&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Xentral&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zipcar&quot;</bucket>
            </map>
            <map to='#f7d42a'>
              <bucket>&quot;Uber&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Adaptive Biotechnologies&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;American Robotics&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Asana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Basis Technologies&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bitpanda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Boxed&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BusBud&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CareRev&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chipper Cash&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Clutch&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Coterie Insurance&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Daily Harvest&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ecobee&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ethos Life&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Finite State&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;FourKites&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Glints&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Green Labs&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Help.com&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Huobi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;InfoSum&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;JetClosing&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Khoros&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lacework&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lightico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lucid Motors&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Megaport&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Moladin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Next Insurance&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Olive AI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Outreach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PayJoy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pipl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pristyn Care&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Redbubble&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ritual&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sanar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Shopify&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Snappy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SQream&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SumUp&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TaxBit&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ThirdLove&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Transfix&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Twiga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Unison&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;VerSe Innovation&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wayflyer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Workato&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zenefits&quot;</bucket>
            </map>
            <map to='#fcc66d'>
              <bucket>&quot;Glossier&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Acast&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AliExpress Russia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Argyle&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bird&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Boozt&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Buenbit&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CaptivateIQ&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chegg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ClickUp&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ContraFect&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cvent&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Divvy Homes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;EasyPost&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Equitybee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;FarEye&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ForeScout&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GetYourGuide&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GoSpotCheck&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hash&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Houzz&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indeed&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;IronNet&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Katerra&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kraken&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lev&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Loom&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MediaMath&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mobile Premier League&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Neon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oscar Health&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PatientPop&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Picsart&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pomelo Fashion&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rasa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rhumbix&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Salesloft&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Shippo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SmartNews&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Spotify&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stytch&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Taboola&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;The Sill&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Top Hat&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tufin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Unbounce&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vendr&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wattpad&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wonderschool&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zego&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zumper&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;8x8&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Airtable&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Antidote Health&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Augury&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Better.com&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BlockFi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bridgit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;C2FO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cazoo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Clarify Health&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Community&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Crypto.com&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Deliveroo Australia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dropbox&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Elementor&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Expel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Flock Freight&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fundbox&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GoHealth&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guardant Health&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Homebot&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Illumina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Introhive&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jump&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Knock&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Leafly&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liv Up&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mainstreet&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Microsoft&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mux&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Numbrs&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Opendoor&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pagaya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;People.ai&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Plum&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Quantcast&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Remote&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rubicon Project&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sema4&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SiriusXM&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sonder&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Stitch Fix&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SWVL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Teleport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tilting Point&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Triplebyte&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uberflip&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Usermind&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vouch&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;WeWork&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Xero&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ZipRecruiter&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' palette='tableau20_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1272l9t14bginz1d29smo0nxounc].[diff:sum:Laid_Off_Count:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1272l9t14bginz1d29smo0nxounc].[mn:Date:ok]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1272l9t14bginz1d29smo0nxounc].[none:Company:nk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1272l9t14bginz1d29smo0nxounc].[none:Country:nk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1272l9t14bginz1d29smo0nxounc].[pcdf:sum:Laid_Off_Count:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1272l9t14bginz1d29smo0nxounc].[pcrk:sum:Laid_Off_Count:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1272l9t14bginz1d29smo0nxounc].[pcto:sum:Laid_Off_Count:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1272l9t14bginz1d29smo0nxounc].[pcto:sum:Laid_Off_Count:qk:3]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1272l9t14bginz1d29smo0nxounc].[pcto:sum:Laid_Off_Count:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1272l9t14bginz1d29smo0nxounc].[pcto:sum:Laid_Off_Count:qk:5]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1272l9t14bginz1d29smo0nxounc].[pcto:sum:Laid_Off_Count:qk:6]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1272l9t14bginz1d29smo0nxounc].[pcto:sum:Laid_Off_Count:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1272l9t14bginz1d29smo0nxounc].[pcva:sum:Laid_Off_Count:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1272l9t14bginz1d29smo0nxounc].[pcva:sum:Laid_Off_Count:qk:3]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1272l9t14bginz1d29smo0nxounc].[pcva:sum:Laid_Off_Count:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1272l9t14bginz1d29smo0nxounc].[sum:Laid_Off_Count:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1272l9t14bginz1d29smo0nxounc].[usr:Calculation_860680167413932033:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1272l9t14bginz1d29smo0nxounc].[sum:Total_Employee:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1272l9t14bginz1d29smo0nxounc].[attr:Percentage:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1272l9t14bginz1d29smo0nxounc].[avg:Percentage:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1272l9t14bginz1d29smo0nxounc].[ctd:Percentage:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1272l9t14bginz1d29smo0nxounc].[none:Percentage:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1272l9t14bginz1d29smo0nxounc].[sum:Percentage:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[mn:Date:ok]' palette='tableau20_10_0' type='palette'>
            <map to='#499894'>
              <bucket>9</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>6</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>7</bucket>
            </map>
            <map to='#e15759'>
              <bucket>11</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>8</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>12</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>4</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='updated.csv' id='updated.csv_035549C574B04212862D8786C7C7181D'>
            <properties context=''>
              <relation connection='textscan.13juu6x01lzpl01go3nvx1xv3172' name='updated.csv' table='[updated#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Company' ordinal='1' />
                  <column datatype='string' name='Location_HQ' ordinal='2' />
                  <column datatype='string' name='Industry' ordinal='3' />
                  <column datatype='real' name='Percentage' ordinal='4' />
                  <column datatype='date' name='Date' ordinal='5' />
                  <column datatype='real' name='Funds_Raised' ordinal='6' />
                  <column datatype='string' name='Stage' ordinal='7' />
                  <column datatype='string' name='Country' ordinal='8' />
                  <column datatype='real' name='Laid_Off_Count' ordinal='9' />
                  <column datatype='integer' name='StageID' ordinal='10' />
                  <column datatype='integer' name='Country_ID' ordinal='11' />
                  <column datatype='integer' name='Industry_ID' ordinal='12' />
                  <column datatype='integer' name='Location_HQ_ID' ordinal='13' />
                  <column datatype='integer' name='Company_ID' ordinal='14' />
                  <column datatype='integer' name='Total_Employee' ordinal='15' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_76513960383E48C6AC0A038BCE49FE5A]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Layoff by Country &amp; Percentage of people laid off' />
      <command command='tsc:brush'>
        <param name='field-captions' value='AGG(Calculation1)' />
        <param name='target' value='Layoff by Country &amp; Percentage of people laid off' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Industry &amp; country'>
      <table>
        <view>
          <datasources>
            <datasource caption='updated' name='federated.1272l9t14bginz1d29smo0nxounc' />
          </datasources>
          <datasource-dependencies datasource='federated.1272l9t14bginz1d29smo0nxounc'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='string' name='[Industry]' role='dimension' type='nominal' />
            <column caption='Laid Off Count' datatype='real' name='[Laid_Off_Count]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
            <column-instance column='[Laid_Off_Count]' derivation='Sum' name='[sum:Laid_Off_Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1272l9t14bginz1d29smo0nxounc].[none:Industry:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1272l9t14bginz1d29smo0nxounc].[sum:Laid_Off_Count:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1272l9t14bginz1d29smo0nxounc].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9890055656433105' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1272l9t14bginz1d29smo0nxounc].[sum:Laid_Off_Count:qk]</rows>
        <cols>[federated.1272l9t14bginz1d29smo0nxounc].[none:Industry:nk]</cols>
      </table>
      <simple-id uuid='{2B305DC8-1C3E-4064-AF2E-68F4F9AB5585}' />
    </worksheet>
    <worksheet name='Laid off Yearly Trend Graph'>
      <table>
        <view>
          <datasources>
            <datasource caption='updated' name='federated.1272l9t14bginz1d29smo0nxounc' />
          </datasources>
          <datasource-dependencies datasource='federated.1272l9t14bginz1d29smo0nxounc'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Laid Off Count' datatype='real' name='[Laid_Off_Count]' role='measure' type='quantitative' />
            <column-instance column='[Laid_Off_Count]' derivation='Sum' name='[sum:Laid_Off_Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='render-fold-reversed' value='false' />
            <encoding attr='space' class='1' field='[federated.1272l9t14bginz1d29smo0nxounc].[sum:Laid_Off_Count:qk]' field-type='quantitative' fold='true' major-origin='0.0' major-show='false' major-spacing='10000.0' scope='rows' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-color' value='#f28e2b' />
                <format attr='size' value='1.6811602115631104' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1272l9t14bginz1d29smo0nxounc].[sum:Laid_Off_Count:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-color' value='#ffbe7d' />
                <format attr='size' value='1.6811602115631104' />
                <format attr='mark-transparency' value='152' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1272l9t14bginz1d29smo0nxounc].[sum:Laid_Off_Count:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-color' value='#8cd17d' />
                <format attr='size' value='1.5052486658096313' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1272l9t14bginz1d29smo0nxounc].[sum:Laid_Off_Count:qk] + [federated.1272l9t14bginz1d29smo0nxounc].[sum:Laid_Off_Count:qk])</rows>
        <cols>[federated.1272l9t14bginz1d29smo0nxounc].[tmn:Date:qk]</cols>
      </table>
      <simple-id uuid='{B5E0F46F-D763-41BE-891A-F67E856042AB}' />
    </worksheet>
    <worksheet name='Layoff by Country &amp; Percentage of people laid off'>
      <table>
        <view>
          <datasources>
            <datasource caption='updated' name='federated.1272l9t14bginz1d29smo0nxounc' />
          </datasources>
          <datasource-dependencies datasource='federated.1272l9t14bginz1d29smo0nxounc'>
            <column caption='Top 10' datatype='boolean' name='[Calculation_860680167412703232]' role='measure' type='nominal'>
              <calculation class='tableau' formula='INDEX() &lt;= 10'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Percentage_Laidoff' datatype='real' name='[Calculation_860680167413932033]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Laid_Off_Count])/SUM([Total_Employee])) * 100' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Laid Off Count' datatype='real' name='[Laid_Off_Count]' role='measure' type='quantitative' />
            <column caption='Total Employee' datatype='integer' name='[Total_Employee]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Laid_Off_Count]' derivation='Sum' name='[sum:Laid_Off_Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total_Employee]' derivation='Sum' name='[sum:Total_Employee:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_860680167412703232]' derivation='User' name='[usr:Calculation_860680167412703232:nk:3]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_860680167413932033]' derivation='User' name='[usr:Calculation_860680167413932033:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1272l9t14bginz1d29smo0nxounc].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1272l9t14bginz1d29smo0nxounc].[usr:Calculation_860680167412703232:nk:3]'>
            <groupfilter function='member' level='[usr:Calculation_860680167412703232:nk:3]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1272l9t14bginz1d29smo0nxounc].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1272l9t14bginz1d29smo0nxounc].[sum:Laid_Off_Count:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1272l9t14bginz1d29smo0nxounc].[none:Country:nk]</column>
            <column>[federated.1272l9t14bginz1d29smo0nxounc].[usr:Calculation_860680167412703232:nk:3]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1272l9t14bginz1d29smo0nxounc].[sum:Laid_Off_Count:qk]' field-type='quantitative' max='40000.0' min='0.0' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1272l9t14bginz1d29smo0nxounc].[usr:Calculation_860680167413932033:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1272l9t14bginz1d29smo0nxounc].[:Measure Names]' />
              <lod column='[federated.1272l9t14bginz1d29smo0nxounc].[none:Country:nk]' />
              <lod column='[federated.1272l9t14bginz1d29smo0nxounc].[sum:Total_Employee:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
                <format attr='text-align' value='right' />
                <format attr='wrap' value='on' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-family' value='Tableau Light' />
                <format attr='font-weight' value='bold' />
                <format attr='color' value='#e15759' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.9890055656433105' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='selection' />
                <format attr='mark-color' value='#a0cbe8' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1272l9t14bginz1d29smo0nxounc].[sum:Laid_Off_Count:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1272l9t14bginz1d29smo0nxounc].[:Measure Names]' />
              <lod column='[federated.1272l9t14bginz1d29smo0nxounc].[none:Country:nk]' />
              <lod column='[federated.1272l9t14bginz1d29smo0nxounc].[sum:Total_Employee:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
                <format attr='text-align' value='right' />
                <format attr='wrap' value='on' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-family' value='Tableau Light' />
                <format attr='font-weight' value='bold' />
                <format attr='color' value='#e15759' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.9890055656433105' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='selection' />
                <format attr='mark-color' value='#a0cbe8' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1272l9t14bginz1d29smo0nxounc].[usr:Calculation_860680167413932033:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1272l9t14bginz1d29smo0nxounc].[:Measure Names]' />
              <lod column='[federated.1272l9t14bginz1d29smo0nxounc].[usr:Calculation_860680167413932033:qk]' />
              <lod column='[federated.1272l9t14bginz1d29smo0nxounc].[none:Country:nk]' />
              <lod column='[federated.1272l9t14bginz1d29smo0nxounc].[sum:Total_Employee:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
                <format attr='text-align' value='right' />
                <format attr='wrap' value='on' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-family' value='Tableau Light' />
                <format attr='font-weight' value='bold' />
                <format attr='color' value='#e15759' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='0.40580111742019653' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='selection' />
                <format attr='mark-color' value='#e15759' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1272l9t14bginz1d29smo0nxounc].[none:Country:nk]</rows>
        <cols>([federated.1272l9t14bginz1d29smo0nxounc].[sum:Laid_Off_Count:qk] + [federated.1272l9t14bginz1d29smo0nxounc].[usr:Calculation_860680167413932033:qk])</cols>
      </table>
      <simple-id uuid='{5C4961E8-DC57-4D08-B18B-BEABA89592D4}' />
    </worksheet>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[<Sheet Name> (Country & Layoff on Specific Locations)]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='updated' name='federated.1272l9t14bginz1d29smo0nxounc' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1272l9t14bginz1d29smo0nxounc'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Laid Off Count' datatype='real' name='[Laid_Off_Count]' role='measure' type='quantitative' />
            <column caption='Location HQ' datatype='string' name='[Location_HQ]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location_HQ]' derivation='None' name='[none:Location_HQ:nk]' pivot='key' type='nominal' />
            <column-instance column='[Laid_Off_Count]' derivation='Sum' name='[sum:Laid_Off_Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1272l9t14bginz1d29smo0nxounc].[none:Location_HQ:nk]'>
            <groupfilter function='level-members' level='[none:Location_HQ:nk]' />
          </filter>
          <filter class='quantitative' column='[federated.1272l9t14bginz1d29smo0nxounc].[sum:Laid_Off_Count:qk]' included-values='in-range' />
          <slices>
            <column>[federated.1272l9t14bginz1d29smo0nxounc].[sum:Laid_Off_Count:qk]</column>
            <column>[federated.1272l9t14bginz1d29smo0nxounc].[none:Location_HQ:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1272l9t14bginz1d29smo0nxounc].[Longitude (generated)]' field-type='quantitative' max='39878544.469755717' min='-40535319.258542627' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1272l9t14bginz1d29smo0nxounc].[Latitude (generated)]' field-type='quantitative' max='15897237.833951984' min='-14472842.623690814' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[federated.1272l9t14bginz1d29smo0nxounc].[Longitude (generated)]' field-type='quantitative' fold='true' max='39878544.469755717' min='-40535319.258542627' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1272l9t14bginz1d29smo0nxounc].[sum:Laid_Off_Count:qk]' field-type='quantitative' max='3000.0' max-size='1' min-size='0' type='quantsize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1272l9t14bginz1d29smo0nxounc].[Longitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1272l9t14bginz1d29smo0nxounc].[none:Country:nk]' />
              <geometry column='[federated.1272l9t14bginz1d29smo0nxounc].[Geometry (generated)]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1272l9t14bginz1d29smo0nxounc].[Longitude (generated)]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.1272l9t14bginz1d29smo0nxounc].[sum:Laid_Off_Count:qk]' />
              <text column='[federated.1272l9t14bginz1d29smo0nxounc].[sum:Laid_Off_Count:qk]' />
              <text column='[federated.1272l9t14bginz1d29smo0nxounc].[none:Location_HQ:nk]' />
              <lod column='[federated.1272l9t14bginz1d29smo0nxounc].[none:Location_HQ:nk]' />
              <lod column='[federated.1272l9t14bginz1d29smo0nxounc].[none:Country:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.1272l9t14bginz1d29smo0nxounc].[none:Location_HQ:nk]</run>
                <run>&gt;&#10;&lt;</run>
                <run>[federated.1272l9t14bginz1d29smo0nxounc].[sum:Laid_Off_Count:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-weight' value='bold' />
                <format attr='font-style' value='normal' />
                <format attr='font-size' value='8' />
                <format attr='color' value='#ffffff' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
                <format attr='size' value='0.82027024030685425' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='has-halo' value='true' />
                <format attr='halo-color' value='#ff9d9a' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='selection' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1272l9t14bginz1d29smo0nxounc].[Latitude (generated)]</rows>
        <cols>([federated.1272l9t14bginz1d29smo0nxounc].[Longitude (generated)] + [federated.1272l9t14bginz1d29smo0nxounc].[Longitude (generated)])</cols>
      </table>
      <simple-id uuid='{E446FF53-27F2-41D3-9067-0764CB2DD678}' />
    </worksheet>
    <worksheet name='Monthly Layoff'>
      <table>
        <view>
          <datasources>
            <datasource caption='updated' name='federated.1272l9t14bginz1d29smo0nxounc' />
          </datasources>
          <datasource-dependencies datasource='federated.1272l9t14bginz1d29smo0nxounc'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Laid Off Count' datatype='real' name='[Laid_Off_Count]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Laid_Off_Count]' derivation='Sum' name='[sum:Laid_Off_Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1272l9t14bginz1d29smo0nxounc].[mn:Date:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='selection' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.8900552988052368' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1272l9t14bginz1d29smo0nxounc].[sum:Laid_Off_Count:qk]</rows>
        <cols>[federated.1272l9t14bginz1d29smo0nxounc].[mn:Date:ok]</cols>
      </table>
      <simple-id uuid='{0F84577C-1BD3-4174-A296-BBA2F16CAEDB}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <layout-options>
        <title>
          <formatted-text>
            <run>LayOff vs Stage (Money Raised)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='updated' name='federated.1272l9t14bginz1d29smo0nxounc' />
          </datasources>
          <datasource-dependencies datasource='federated.1272l9t14bginz1d29smo0nxounc'>
            <column caption='Laid Off Count' datatype='real' name='[Laid_Off_Count]' role='measure' type='quantitative' />
            <column datatype='string' name='[Stage]' role='dimension' type='nominal' />
            <column-instance column='[Stage]' derivation='None' name='[none:Stage:nk]' pivot='key' type='nominal' />
            <column-instance column='[Laid_Off_Count]' derivation='Sum' name='[sum:Laid_Off_Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1272l9t14bginz1d29smo0nxounc].[none:Stage:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Stage:nk]' />
              <groupfilter function='member' level='[none:Stage:nk]' member='&quot;Unknown&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1272l9t14bginz1d29smo0nxounc].[none:Stage:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1272l9t14bginz1d29smo0nxounc].[sum:Laid_Off_Count:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1272l9t14bginz1d29smo0nxounc].[none:Stage:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1272l9t14bginz1d29smo0nxounc].[sum:Laid_Off_Count:qk]' field-type='quantitative' max='40000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1272l9t14bginz1d29smo0nxounc].[none:Stage:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9890055656433105' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1272l9t14bginz1d29smo0nxounc].[sum:Laid_Off_Count:qk]</rows>
        <cols>[federated.1272l9t14bginz1d29smo0nxounc].[none:Stage:nk]</cols>
      </table>
      <simple-id uuid='{043B1775-5CE1-428E-B24C-E6BEFB690543}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Per month distribution of Layoff
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='updated' name='federated.1272l9t14bginz1d29smo0nxounc' />
          </datasources>
          <datasource-dependencies datasource='federated.1272l9t14bginz1d29smo0nxounc'>
            <column caption='One' datatype='integer' name='[Calculation_860680168123265041]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Laid Off Count' datatype='real' name='[Laid_Off_Count]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_860680168123265041]' derivation='Avg' name='[avg:Calculation_860680168123265041:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Laid_Off_Count]' derivation='Sum' name='[pcto:sum:Laid_Off_Count:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Laid_Off_Count]' derivation='Sum' name='[sum:Laid_Off_Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1272l9t14bginz1d29smo0nxounc].[avg:Calculation_860680168123265041:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.1272l9t14bginz1d29smo0nxounc].[avg:Calculation_860680168123265041:qk]' scope='rows' value='false' />
            <encoding attr='space' class='0' field='[federated.1272l9t14bginz1d29smo0nxounc].[avg:Calculation_860680168123265041:qk]' field-type='quantitative' max='1.0' min='1.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='527' />
            <format attr='text-format' field='[federated.1272l9t14bginz1d29smo0nxounc].[pcto:sum:Laid_Off_Count:qk]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6591712236404419' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1272l9t14bginz1d29smo0nxounc].[avg:Calculation_860680168123265041:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1272l9t14bginz1d29smo0nxounc].[pcto:sum:Laid_Off_Count:qk]' />
              <text column='[federated.1272l9t14bginz1d29smo0nxounc].[mn:Date:ok]' />
              <color column='[federated.1272l9t14bginz1d29smo0nxounc].[mn:Date:ok]' />
              <wedge-size column='[federated.1272l9t14bginz1d29smo0nxounc].[sum:Laid_Off_Count:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.55972373485565186' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1272l9t14bginz1d29smo0nxounc].[avg:Calculation_860680168123265041:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.44977900385856628' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1272l9t14bginz1d29smo0nxounc].[avg:Calculation_860680168123265041:qk] + [federated.1272l9t14bginz1d29smo0nxounc].[avg:Calculation_860680168123265041:qk])</rows>
        <cols />
      </table>
      <simple-id uuid='{0BCFBF85-2082-4651-98EC-A6A66018F6AB}' />
    </worksheet>
    <worksheet name='Top 20 Companies'>
      <table>
        <view>
          <datasources>
            <datasource caption='updated' name='federated.1272l9t14bginz1d29smo0nxounc' />
          </datasources>
          <datasource-dependencies datasource='federated.1272l9t14bginz1d29smo0nxounc'>
            <column datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Laid Off Count' datatype='real' name='[Laid_Off_Count]' role='measure' type='quantitative' />
            <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Laid_Off_Count]' derivation='Sum' name='[sum:Laid_Off_Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1272l9t14bginz1d29smo0nxounc].[none:Company:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Laid_Off_Count])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Company:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1272l9t14bginz1d29smo0nxounc].[sum:Laid_Off_Count:qk]' included-values='in-range'>
            <min>3.0</min>
          </filter>
          <slices>
            <column>[federated.1272l9t14bginz1d29smo0nxounc].[sum:Laid_Off_Count:qk]</column>
            <column>[federated.1272l9t14bginz1d29smo0nxounc].[none:Company:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1272l9t14bginz1d29smo0nxounc].[none:Company:nk]' />
              <size column='[federated.1272l9t14bginz1d29smo0nxounc].[sum:Laid_Off_Count:qk]' />
              <text column='[federated.1272l9t14bginz1d29smo0nxounc].[none:Company:nk]' />
              <text column='[federated.1272l9t14bginz1d29smo0nxounc].[sum:Laid_Off_Count:qk]' />
              <text column='[federated.1272l9t14bginz1d29smo0nxounc].[none:Country:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontalignment='0'><![CDATA[<[federated.1272l9t14bginz1d29smo0nxounc].[none:Company:nk]>:-  <[federated.1272l9t14bginz1d29smo0nxounc].[none:Country:nk]>
<[federated.1272l9t14bginz1d29smo0nxounc].[sum:Laid_Off_Count:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{AF81E7FB-FAA2-41E2-B5A9-35004C966F23}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='95809' id='7' param='horz' type-v2='layout-flow' w='99032' x='484' y='3507'>
            <zone h='95809' id='5' type-v2='layout-basic' w='90144' x='484' y='3507'>
              <zone h='31659' id='3' name='Map' w='51833' x='38795' y='3507'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='31659' id='9' name='Layoff by Country &amp; Percentage of people laid off' w='38311' x='484' y='3507'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='19278' id='11' name='Laid off Yearly Trend Graph' w='63467' x='27161' y='80038'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44872' id='12' name='Industry &amp; country' w='63467' x='27161' y='35166'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='35399' id='14' name='Sheet 7' w='26677' x='484' y='35166'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='28751' id='15' name='Sheet 8' w='26677' x='484' y='70565'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='147' h='95809' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='8888' x='90628' y='3507'>
              <zone h='49617' id='8' name='Map' pane-specification-id='1' param='[federated.1272l9t14bginz1d29smo0nxounc].[none:Country:nk]' type-v2='color' w='8888' x='90628' y='3507'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='266' h='23438' id='10' is-fixed='true' name='Layoff by Country &amp; Percentage of people laid off' pane-specification-id='7' param='[federated.1272l9t14bginz1d29smo0nxounc].[:Measure Names]' type-v2='color' w='8888' x='90628' y='53124'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='22754' id='16' name='Sheet 8' pane-specification-id='1' param='[federated.1272l9t14bginz1d29smo0nxounc].[mn:Date:ok]' type-v2='color' w='8888' x='90628' y='76562'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='2823' id='17' type-v2='text' w='99032' x='484' y='684'>
            <formatted-text>
              <run bold='true' fontcolor='#000000' fontsize='18'>Layoff Analysis</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1950' minheight='1950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98632' id='20' param='vert' type-v2='layout-flow' w='99032' x='484' y='684'>
                <zone forceUpdate='true' h='2823' id='17' type-v2='text' w='99032' x='484' y='684'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='18'>Layoff Analysis</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='31659' id='9' is-fixed='true' name='Layoff by Country &amp; Percentage of people laid off' w='38311' x='484' y='3507'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='266' h='23438' id='10' name='Layoff by Country &amp; Percentage of people laid off' pane-specification-id='7' param='[federated.1272l9t14bginz1d29smo0nxounc].[:Measure Names]' type-v2='color' w='8888' x='90628' y='53124'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='31659' id='3' is-fixed='true' name='Map' w='51833' x='38795' y='3507'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='49617' id='8' name='Map' pane-specification-id='1' param='[federated.1272l9t14bginz1d29smo0nxounc].[none:Country:nk]' type-v2='color' w='8888' x='90628' y='3507'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35399' id='14' is-fixed='true' name='Sheet 7' w='26677' x='484' y='35166'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44872' id='12' is-fixed='true' name='Industry &amp; country' w='63467' x='27161' y='35166'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='28751' id='15' is-fixed='true' name='Sheet 8' w='26677' x='484' y='70565'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='22754' id='16' name='Sheet 8' pane-specification-id='1' param='[federated.1272l9t14bginz1d29smo0nxounc].[mn:Date:ok]' type-v2='color' w='8888' x='90628' y='76562'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='217' h='19278' id='11' is-fixed='true' name='Laid off Yearly Trend Graph' w='63467' x='27161' y='80038'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{FBFE8904-D20C-412D-A26D-976726F74194}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='167'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1272l9t14bginz1d29smo0nxounc].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1272l9t14bginz1d29smo0nxounc].[none:Location_HQ:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{0A56C533-5FC2-4052-99BE-C9097023431F}' />
    </window>
    <window class='worksheet' name='Layoff by Country &amp; Percentage of people laid off'>
      <cards>
        <edge name='left'>
          <strip size='178'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='7' param='[federated.1272l9t14bginz1d29smo0nxounc].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1272l9t14bginz1d29smo0nxounc].[none:Company_ID:ok]</field>
            <field>[federated.1272l9t14bginz1d29smo0nxounc].[none:Country:nk]</field>
            <field>[federated.1272l9t14bginz1d29smo0nxounc].[usr:Calculation_860680167412703232:nk]</field>
            <field>[federated.1272l9t14bginz1d29smo0nxounc].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C4244B13-5A18-4C5A-B379-023727D9E433}' />
    </window>
    <window class='worksheet' name='Monthly Layoff'>
      <cards>
        <edge name='left'>
          <strip size='176'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1272l9t14bginz1d29smo0nxounc].[mn:Date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1272l9t14bginz1d29smo0nxounc].[mn:Date:ok]</field>
            <field>[federated.1272l9t14bginz1d29smo0nxounc].[none:Industry:nk]</field>
            <field>[federated.1272l9t14bginz1d29smo0nxounc].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1BDC0E72-E8AB-4975-9E21-9B111D10C6BF}' />
    </window>
    <window class='worksheet' name='Laid off Yearly Trend Graph'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1272l9t14bginz1d29smo0nxounc].[none:Company:nk]</field>
            <field>[federated.1272l9t14bginz1d29smo0nxounc].[none:Country:nk]</field>
            <field>[federated.1272l9t14bginz1d29smo0nxounc].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{616F46FD-0C29-40F2-8BEA-88C3EC2E0587}' />
    </window>
    <window class='worksheet' name='Top 20 Companies'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1272l9t14bginz1d29smo0nxounc].[none:Company:nk]</field>
            <field>[federated.1272l9t14bginz1d29smo0nxounc].[none:Country:nk]</field>
            <field>[federated.1272l9t14bginz1d29smo0nxounc].[usr:Top 10 (copy)_860680168065298444:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C9760C6E-4559-4397-92C1-124A4DEDAEEC}' />
    </window>
    <window class='worksheet' name='Industry &amp; country'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='174'>
            <card pane-specification-id='0' param='[federated.1272l9t14bginz1d29smo0nxounc].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1272l9t14bginz1d29smo0nxounc].[none:Country:nk]</field>
            <field>[federated.1272l9t14bginz1d29smo0nxounc].[none:Location_HQ_ID:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EF00C830-2708-4B57-870D-E4A687527881}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1272l9t14bginz1d29smo0nxounc].[none:Stage:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1272l9t14bginz1d29smo0nxounc].[none:Stage:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C3F7206C-419D-4DF8-A92F-4BC11CDE0BE1}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Industry &amp; country'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Laid off Yearly Trend Graph'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Layoff by Country &amp; Percentage of people laid off'>
          <zoom type='entire-view' />
          <highlight field='[federated.1272l9t14bginz1d29smo0nxounc].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <highlight field='[federated.1272l9t14bginz1d29smo0nxounc].[none:Country:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 7'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 8'>
          <zoom type='fit-height' />
          <highlight>
            <color-one-way>
              <field>[federated.1272l9t14bginz1d29smo0nxounc].[mn:Date:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='16' />
      <simple-id uuid='{FB7BA072-D707-455F-A7AF-75175A7C7FE7}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='195'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1272l9t14bginz1d29smo0nxounc].[mn:Date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1272l9t14bginz1d29smo0nxounc].[avg:Calculation_860680168123265041:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1272l9t14bginz1d29smo0nxounc].[mn:Date:ok]</field>
            <field>[federated.1272l9t14bginz1d29smo0nxounc].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CF7CE265-95BC-4438-80B3-8EFB66C0634F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Dashboard 1' width='384'>
      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
      jLi4uBFvs7GxkZdeeonFixefdtlNmzbR1NREenr6SZe577771HoXx/rVr37F3LlzMZvNp2xD
      CMHjjz9OSUkJer2elJQUHnjggSG/DWlk7Nu3jyeeeIIFCxZgsViA/s/kv//7vzl06BDZ2dln
      vG2/389jjz3Gf/7nfxIcHIzT6eR///d/+fvf/86///1vIiMjSUpKGpbX0dnZSXd390nzkx3r
      lDWBS0pKhjw2cKSj0WhOm8htoIfTaDTqzsTr9dLR0cGzzz4L9B9ZeTwefvKTn5xwG36/f9D6
      p2tv7dq1uN1unnvuOfx+P7W1tYNigf5snl8kCd3AOgPLe71eXnjhBZ588skTLgucdrtr165l
      zZo1JCQkcM8999Da2kpMTIz6vMfjISIigkcffRSHw8ELL7zAxo0b1XoDfr8fnU43pJ3j2x94
      3wf+Pv61nOw1Arz00kv88pe/HFSrYeC9O/5zP/b7MPD8iT7342M9/nU0NTWRkJDAj3/84xMu
      f6LYB46ejn382LaPj/XYz/9ETvX+Hu9E27rnnnuGbO9kR3cneo/8fj+tra38/ve/B8DtduN0
      Ok/625CGV1tbGzqdjp07d6pZe5uamqirqyM0NFRd7mT7wJN9TwE++eQTMjMziY6ORgjBs88+
      S1paGnfccQcul0tNE3+q7+/JHN9uYWEh9fX1avbi45eFz/cTX6oovNPp5Fe/+hVutxu32831
      119PSkoKr776KnfffTcApaWl5Ofnc8011/C3v/2N3NxcdDod1157LTk5Ofzyl7+ktLSU++67
      j+nTp/Ppp59SUlLCfffdx5IlSwaleH7jjTd45513cDqd3HLLLWRlZfFf//Vf3H///RgMBhwO
      B3/84x/52c9+BvTvPHfv3s3zzz+vpn+eOHEiQgi2bdvGm2++idFoJCcnh+985zuUlZVRXl6u
      Jqx79tlnueOOO6itreUf//gHXV1dOJ1OMjIyuPXWW3nyySc5cuQI9913HzExMdx+++28/PLL
      ZGdn89JLL3HllVdSX1/PjTfeCEBubi7Nzc2DXlNiYiIVFRVER0fj9/sJDg4+6fsdHBzM1Vdf
      zT//+U+8Xi//8z//Q0NDAxqNhh//+MckJSWxceNGMjIyePvttzGbzdxxxx2sXbuWQ4cOodFo
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Industry &amp; country' width='384'>
      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
      EgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Laid off Yearly Trend Graph' width='384'>
      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
      9f8DB3H0Z6GPkQMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Layoff by Country &amp; Percentage of people laid off' width='384'>
      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
      vLYSZaFQYGFhgdXV1a/TTGDtDiCVSpFKpTZcL//jjz9meXmZZrOJaZpUKhVOnTrF1atXKRQK
      1Go10uk0i4uLN63web+l02nm5uY2XO1TCCHulwd6eXn9idKyLAzDWLdUMWB3pyiKwv79+9m3
      bx+qqmKaJul0munpaeLxOH19fQD2lXdryWTLslAUZd1+WvtvbQPYJ/ZbXblf38VTr9dZWVnh
      s88+4+c//zl9fX3ouk4kErHbDP+vy+r697fa0drm+na22nr992i5fl/X//lW+2i9v/V9bzy2
      1x8L0zTtv2+m+2pt9VF57kOIx4EFGOa9XZQ+tP6FSqXCf/kv/4X+/n6uXbvG8vIyXq+XY8eO
      8eKLL6IoChcvXiSVSjE2Nsb8/Dzvv/8+6XQap9PJhx9+CMA//sf/GEVROH36NJ999hlzc3P4
      /X7+4A/+gNHRUYLBoP2ZH374IWfOnCGVSmGaJi6Xi29+85u3badlWSQSCf7yL/+SH/7wh/T1
      9eFyuchms8zPz5NOp3n++efRNI2TJ09y8eJF4vE4X375JbVajT179nD48GF27twJrN3FfPTR
      R4yPj5PNZnG73cTjcd566y06OjqwLItkMslvfvMbJiYmUBSFer1Of3+/3aZkMsnx48c5d+4c
      lUqFeDzOH//xH9PZ2YnL5WJ+fp5f/epXdHR0cOnSJRqNBgMDA2zfvp3p6WkuX76M3+/nyJEj
      HDt2jEAgcNtjcPTYPvbiuddftRDiIZqowsSpzfe0XO+hBYBhGMzOzhKPx3nuuecIBAKk02ne
      e+89vvGNb6AoCuVymXw+j2VZ7Nixg0qlwszMDJFIhF27dgFr69p/+eWXzM3NMTY2xne/+10W
      Fxf5+OOPcTqd7Nmzh1qtxpUrVxgfH+fo0aN0d3eTz+e5cOHCbdtYKpUYHx9nfn6erq4udu3a
      ha7rwNodRKlUsks8wlpR9uXlZTo6Ovjxj3+MaZp8+eWXTExMMDY2hqZp/PKXv8TlcvHiiy/S
      3d1NvV7nL/7iL2g2m1iWxczMDCdOnMDv9/Ozn/3MDrdMJgOs3Q28++67BINB3nrrLQKBAHNz
      c/zqV7/i9ddfZ9u2bVSrVRYWFti+fTs/+tGPyOfzTExM8OWXX3Ls2DFeeuklrl69SqPR4Nq1
      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
      CQBCCOFQ/w8po8SYfJ0hRQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Map' width='384'>
      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
      1V/g4CAfAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Monthly Layoff' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAcBklEQVR4nO3dX0xc993n8c9h5swZY/AA/sPETgBjx7i1Q2wS4hhDMbGVpkndVEorRWqf
      3ZtKvWlvelvp0aNd7f3e9KIXlbqrvci22ciNlLSprYRENqGpwTbF2JDYiU0xf4wxf4xnDmfO
      zHNBPSu3aTNDznA8+b1fN9YEmN+XFs6b35k5M1Yul8sJAGCcirAHAACEgwAAgKEIAAAYigAA
      gKEIAAAYigAAgKGiYQ8AAOvh5z//uTzPUywW009/+lPV19fnP7awsKDf//73evXVV0OccP0R
      AABGqKur0w9/+ENdu3ZNf/zjH1VXV6ezZ8+qoaFBu3fv1smTJ5VOp1VTU6P33ntP+/bt049+
      9CNVVHx1T5R8db8zAPgctbW1SqfTevzxx9Xc3KwrV65o165devbZZ/WDH/xAH374odrb2zU2
      NqY7d+6EPW5JsQMAYIRMJqMbN27ovffe0zPPPKPXX39d3/ve93Tz5k1Fo1GlUiktLy+rsrJS
      27dv1/79+1VZWRn22CVl8VIQAEzwhz/8QTdv3lRra6va2tp07tw5DQ8Pa9u2bTp+/Lg++ugj
      TU1N6emnn9Y777yjRx99VN/85jcVi8XCHr1kCAAAGIrHAADAUA9FADzPC3sEADDOQxEAAMD6
      C/RZQJcuXdLMzIwymYza2tp07949jY6Oav/+/XIcR5JUXV2tq1evqqWlJf+Xv+/7ymazQY4C
      APgCJXkQ+J133tHRo0d16tQpvfTSS3rrrbf09a9/XZI0Ojqqjo4OJRKJ/Od7nifbtoMeAwDw
      LwR+CiiVSqmiokKO48hxHFmWlf/r//Tp06qtrX3g4A8ACEfgAfjwww/17LPPSlL+tM79f7u7
      uzU+Ps7pHgB4CAQagEwmo3Q6rerqakmSZVl6//338zsA27bV1dWl3t7eIJcFAKxByS8ES6fT
      isfj//JzeAwAANZfyZ8G+kUHfwBAOLgOAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAM
      RQAAwFAEAAAMFej7AXxZy0M/DnuEotn131as/kTYYwBA0dgBAIChCAAAGIoAAIChCAAAGIoA
      AIChCAAAGIoAAIChAg+A7/tyXTfouwUABCzQC8EmJyc1ODioTZs26fDhw3rnnXdUWVmpRCKh
      mpoaSatvFD87O6v29vYglwYAFCnQHcDQ0JB2796thoYGRaNRua6rXbt26eDBg5KkxcVFXbx4
      kYM/ADwEAt0BpFIp2batjz/+WBUVFTp06JBu3bqls2fP6tChQxoeHlZjY2P+8z3Pk7R62iib
      zQY5yrrxM5zyAlCeAg1AXV2d6urqJEnLy8uqq6vTgQMHdP36dUlSR0eHPv30U01NTSmZTMq2
      7fzX2ratTJDDrJNINKKY44Q9BgAULdBTQIcPH9b58+c1MTGhlpYW3bhxQ6dPn9aTTz6p2tpa
      1dbWqqenR7dv3w5yWQDAGli5XC4X9hCe58m2bV4NFADWEdcBAIChCAAAGIoAAIChCAAAGIoA
      AIChCAAAGIoAAIChCAAAGIoAAIChCAAAGIoAAIChCAAAGIoAAIChCAAAGIoAAIChCAAAGIoA
      AIChCAAAGIoAAIChCAAAGCrwAPi+L9d187fT6XTQSwAAAhAN8s4mJyc1ODioTZs26fDhw3rv
      vfcUj8fl+74aGhokSZZlaXZ2Vu3t7UEuDQAoUqA7gKGhIe3evVsNDQ2KRqPK5XLq6urSysqK
      JGlxcVEXL17k4A8AD4FAdwCpVEq2bevjjz9WRUWFLMuSJFVUrHZmeHhYjY2N+c/3PE/S6mmj
      bDYb5Cjrxs88eMoLAMpFoAGoq6tTXV2dJGl5eVmpVEq5XE6pVEqS1NHRoU8//VRTU1NKJpOy
      bTv/tbZtKxPkMOskEo0o5jhhjwEARQs0AIcPH9aZM2cUjUbV2dmpjRs36tSpU2pvb5fzt4Nk
      U1OTLl++rGQyGeTSAIAiWblcLhf2EJ7nybZtLQ/9OOxRimbXf1ux+hNhjwEAReM6AAAwFAEA
      AEMRAAAwFAEAAEMRAAAwFAEAAEMRAAAwFAEAAEMRAAAwFAEAAEMRAAAwFAEAAEMRAAAwFAEA
      AEMRAAAwFAEAAEMRAAAwFAEAAEMRAAAwFAEAAEMRAAAwVDTIO5ubm9P58+dVUVGhjo4OXb16
      VdPT00okEtq5c6ckqbq6WlevXlVLS0uQSwMAihRoAD755BM9/fTTSiQSkqSbN2/q+PHjkqRr
      165Jkvr7+9XR0RHksgCANQg0AJFIRGfOnFEsFtOxY8fkuq7efPNNNTc3q7KyUqdPn1Zra2s+
      EJ7nSZJ831c2mw1ylHXjZ3y5rhv2GABQNCuXy+WCvtOBgQFt2bJFjY2NkqQ33nhDBw4ckOd5
      Ghoa0iuvvKKKiv//8IPnebJtW8tDPw56lJKz67+tWP2JsMcAgKIFugMYHBzU0tKSpqen9bWv
      fU1vv/22qqurFY/HJUm2baurq0u9vb167rnnglwaAFCkwHcAKysrikaj+b/wXdeV4zj/8mvY
      AQDA+gt0ByBJsVjsgdtfdPAHAISD6wAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAE
      AAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAl
      D0Amkyn1EgCANQj0TeFv3LihkZEROY6jjo4OjYyMaH5+Xlu3blVdXZ0sy1IsFtPExIRaW1uD
      XBoAUKRAdwA3btzQ/v371dXVJcdxNDU1paNHj2p8fFzpdFrz8/Pq6+vTnj17glwWALAGge4A
      tm/frvHxcf35z3/Wt771LUWjUVmWpWh0dZn+/n61tLQoHo9LkjzPkyT5vq9sNhvkKOvGz/hy
      XTfsMQCgaIEGoL6+Xjt37tTg4KBu3bolz/OUy+XyB/rOzk6Njo5qaWlJ1dXVsm07/7W2basc
      Hy2IRCOKOU7YYwBA0QI9BTQ+Pq7e3l7Nzs4qmUwqmUzq3XffVUNDg+LxuDZu3Kju7m6NjIwE
      uSwAYA2sXC6XC/IOfd9XRUWFLMuStPosoPungP4Zz/Nk27aWh34c5Cjrwq7/tmL1J8IeAwCK
      FugpIEmKRCIPLvAFB38AQDi4EAwADEUAAMBQBAAADEUAAMBQBAAADEUAAMBQBAAADEUAAMBQ
      BAAADEUAAMBQBAAADEUAAMBQBAAADEUAAMBQBAAADEUAAMBQBAAADEUAAMBQBAAADFWSAAT8
      PvMAgBII/B3bb968qXPnzuk73/mOzp49q5WVFSUSCSWTSVmWpVgspomJCbW2tga9NACgCIHu
      AHzf11/+8hc5jiNJmp+fV1tbmw4ePKh0Oq35+Xn19fVpz549QS4LAFiDQHcAAwMDevzxxzU6
      OqpMJqNkMqkLFy7I9301NTWpv79fLS0tisfjkiTP8ySthiObzQY5yrrxM75c1w17DAAoWqAB
      WF5e1srKisbHxzU9Pa29e/dq48aNOnnypCSps7NTo6OjWlpaUnV1tWzbzn+tbdvKBDnMOolE
      I4r9bccDAOUk0AD09PRIkjZs2KAdO3bo/fffVzab1Y4dO/J/9Xd3d2tkZESHDh0KcmkAQJGs
      XImfspPJZBSN/uvOeJ4n27a1PPTjUo5SEnb9txWrPxH2GABQtJJfB/BFB38AQDi4EAwADEUA
      AMBQBAAADEUAAMBQBAAADEUAAMBQBAAADEUAAMBQBAAADEUAAMBQBAAADEUAAMBQvFIb8BCY
      XvxMp0f+d9hjFO341/+L6jc1hT0G1ogAAA+BtHdPN+ZGwh6jaGnvXtgj4EvgFBAAGIoAAICh
      CAAAGIoAAIChCAAAGIoAAIChAg+A53m6fv26JGlhYUFjY2O6e/euUqmUUqmUstmsZmdng14W
      AFCkwAMwMDCgjz76SJLU19cnx3HU19enyclJTU5OamBgQIuLi0EvCwAoUqAXgt3/y762tnb1
      zqNRNTY2amxsTJJ0+fJlOY6j9vZ2SZLv+5KkbDarTCYT5Cjrppxnx8Mjm/XDHmFNslmfn/8y
      FugO4MyZM9qwYYOmpqZ0+/Zt5XI5Scr/u2HDBnmel78NAAhPoDuAjo4OZTIZVVZWynEcZTIZ
      ffbZZ/kDflNTk5aXlzU8PKwnnnhCkUhE0upf0dFoVG6Qw6yTiooKRaO8oga+nIqKSNgjrElF
      RYSf/zIW6P9z27ZtkyT19PSoqqpKR44c0dTUlI4cOZI/2Mfjcd26dSvIZQEAa1CSdN9/DCCR
      SCiRSPzDx++HAgAQHq4DAABDFRwA13U1NTUlSZqYmJDneSUbCgBQegUFIJfL6U9/+pNef/11
      DQ0N6de//rVSqVSpZwMAlFDBO4DZ2Vn5vq+bN2/q+PHjqq6uLuVcAIASK+hBYMuy9OKLL+rk
      yZNaXl7W8vKynnrqKZ7+hYfKHwb/e9gjFO2Zx/9NddVNYY8BQxV8BL99+7bm5ub0/PPPS1p9
      /jvwMJmevxz2CEVbyfCWighPwQFIJBKamprS0NCQpNWLuogAAJSvggMQi8X08ssv529z8AeA
      8lZwADzP08DAgCTp+vXram1tJQIAUMYKDsCGDRv0/e9/X5L02muv6d69e597lS8AoDwUHIBU
      KqXf/va3klavC9iwYUPJhgIAlF7BAaisrNTevXs1MTGhpqYm2bZdyrkAACVW8En86elpXbly
      RZ2dnTp37pyWlpZKORcAoMQKDkA8Htfdu3f117/+Vel0mh0AAJS5ggKQyWRkWZZeeeUVZbNZ
      vfDCCzwGAABlrqAAjI6O6vz582psbNSRI0c0MDCge/e4ghEAyllBAdiwYYPGxsa0tLSkubk5
      TU5O8jpAAFDmCjqK79y5Uw0NDfrVr36lSCSi48ePKxaLlXo2AEAJFfxqoC+88IKef/55WZYl
      y7JKPRcAoMQKOgU0NDSkxcVFffLJJxz8AeAroqAdwOzsrD744ANNT0/rySeflCR997vf/YfH
      ARYWFjQzM6NYLKaGhgbNzs7q7t27isfjqqmpkSQ5jqO5uTlt2bIl4G8FAFCMggLwxBNPaPPm
      zRoZGdGBAwckff6rgd67d0+O4+jy5cvatGmTBgYG1NLSIkmanJyUtPq+Aps3byYAABCyggJw
      5swZbdq0SalUStls9p9+Xn19vQYHB7WwsKCqqiq5rqtbt26psbFRknT58mU5jqP29nZJku/7
      kqRsNqtMJvNlv5dQlPPsCJ//t5+fbNYPe5Q1yWZ9fv7LWEGPARw9elTT09OamZnRpUuXdOnS
      pX8ags2bN6umpkaLi4vq6elRQ0ODPvjgA0mrTyf1PE+5XC647wAAsCYF7QBqa2t1+PBh2bat
      qqoqHTx48HOvA/jss88UjUYVjUaVSqU0Pj6u2tra/FXDTU1NWl5e1vDwsJ544glFIhFJq39F
      R6NRuQF+Y+uloqKCayKwZpG//fxUVETCHmVNKioi/PyXsYJ2ADMzM/rNb36j5uZmVVVV6Ze/
      /OXnbvs2bdqkdDqtnTt3aseOHdq2bZtc11VnZ6ceeeQRPfLII9q/f7/q6+sD/0YAAMUpKN3X
      r19XW1ubnnrqKUnS+fPndffu3fwze+7bsmXLAw/ubt++/XPvb9u2bWudFwAQkIICsG/fPv3i
      F7/Q7OysPM+TZVm8GxgAlLmCAlBZWamf/OQnmpiYUCQS0WOPPcYFYQBQ5op6T+Ddu3eXchYA
      wDoqKABDQ0M6e/aslpaWlEgkND8/r5/97Ge8KQwAlLGCngXU0tKi48ePa8eOHXr11Ve1ZcsW
      pdPpUs8GACihggLgOI4aGxs1OTmpt99+W9PT03Icp9SzAQBKqKBTQMvLy8rlcnr55Zd169Yt
      tbW1cfEHAJS5go7i09PT8jxPAwMDklav+N21a9fnviAcAKA8FBSA5uZm5XI53b59W3Nzc5LE
      00ABoMwVfB5nZmZGH330kSzLUi6XUzabzb+WDwCg/BR8DicWi2n37t2qrq7WvXv3dO/evVLO
      BQAosYJ3ADU1NfrGN74h13U1PDysqqqqUs4FACixgncAlmVp06ZN2rp1q0ZHR+V5XinnAgCU
      WEE7gJmZGf3ud7/L3+bN4QGg/BUUgJqaGp04cSJ/+8SJE4rFYiUbCgBQegUFIBaLKZlMlnoW
      AMA64kouADAUAQAAQxEAADAUAQAAQwUegEwmo1wu98BtAMDDJ9DXdL569arGx8eVTqfV09Oj
      kZERzc/Pa+vWraqrq5NlWYrFYpqYmFBra2uQSwMAihToDuCxxx7TM888o2g0qnQ6rampKR09
      ejQfhfn5efX19WnPnj1BLgsAWINAdwCRSESnTp3S3bt3VVlZqWg0Ksuy8m8e09/fr5aWFsXj
      cUnKv5yE7/vKZrNBjrJu/Iwv13UlSfeWroQ8TfHs2BbZzpawxzCW53lyXbdsX1rl/vwoT4EG
      IJPJ6KWXXtLg4KDGx8fleZ5yuVz+h7uzs1Ojo6NaWlpSdXX1A28qb9u2yvHRgkg0otjf3h7z
      06H/GfI0xduy/WVVbfpu2GMYy7ZtOY7zwO9CObk/P8pToAEYHR3V3Nyc7t69q71792p+fl7v
      vvuuGhoa8n/1d3d3a2RkRIcOHQpyaQBAkQINQGtrqzzPy5/6aWtrUyaT+Yf3D+bgDwDhC/yd
      3f9+K8ubxwPAw4kLwQDAUAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAADAUDxJH8CX9tf5z/T/
      Lv6vsMco2itP/lc9WtMU9hihIQAAvrSUt6xPbo2EPUbRUt5y2COEilNAAGAoAgAAhiIAAGAo
      AgAAhiIAAGAoAgAAhiIAAGAoAgAAhiIAAGAoAgAAhgo8ANlsVtlsNui7BQAELNDXAhofH9fY
      2JhSqZSOHTumwcFBraysKJFIKJlMyrIsxWIxTUxMqLW1NcilAQBFCnQHUFNTo56eHtXU1Ghx
      cVHz8/Nqa2vTwYMHlU6nNT8/r76+Pu3ZsyfIZQEAaxDoDqCqqkqDg4OSpG3btimZTOrChQvy
      fV9NTU3q7+9XS0uL4vG4JMnzPEmS7/tle9rIz/hyXTfsMdYs45f3/OXO8zy5rpv/XSg3X5X5
      TRVoAMbGxiRJR44ckWVZ2rt3rzZu3KiTJ09Kkjo7OzU6OqqlpSVVV1fLtu3819q2rUyQw6yT
      SDSimOOEPcaaRSMROWU8f7mzbVuO4zzwu1BOvirzmyrQAMzMzMjzPPX29urAgQMaGhpSNpvV
      jh078n/1d3d3a2RkRIcOHQpyaQBAkQINQFdX1wO3u7u7lclkFI0+uAwHfwAIX8mvA/j7gz8A
      4OHAhWAAYCgCAACGIgAAYCgCAACGIgAAYCgCAACGIgAAYCgCAACGIgAAYCgCAACGIgAAYChe
      qAd5A3/5H2GPULRHtnVpe/03wh4DKEsEAHl3Fq+EPULRahNfC3sEoGxxCggADEUAAMBQBAAA
      DEUAAMBQBAAADEUAAMBQgQcgm80qm83mb2cymaCXAAAEINDrAMbHxzU2NqZUKqVjx47pypUr
      mp+f19atW1VXVyfLshSLxTQxMaHW1tYglwYAFCnQHUBNTY16enpUU1OjxcVFTU1N6ejRoxof
      H1c6ndb8/Lz6+vq0Z8+eIJcFAKxBoDuAqqoqDQ4OSpK2bdumaDQqy7IUja4u09/fr5aWFsXj
      cUmS53mSJN/3HzhtVE78jC/XdcMeY80yPvOHyfM8ua6b/10oN1+V+U0VaADGxsYkSUeOHJFl
      WfI8T7lcLv/D0dnZqdHRUS0tLam6ulq2bee/1rZtleOjBZFoRDHHCXuMNYtGInKYPzS2bctx
      nAd+F8rJV2V+UwV6CmhmZkYLCwvq7e3VnTt3lEwm9e6776qhoUHxeFwbN25Ud3e3RkZGglwW
      ALAGge4Aurq6HrhdW1urTCaTPwV036FDh4JcFgCwBiW/DuDvD/4AgIcDF4IBgKEIAAAYigAA
      gKEIAAAYigAAgKEIAAAYigAAgKEIAAAYigAAgKEIAAAYigAAgKEIAAAYigAAgKEIAAAYigAA
      gKEIAAAYigAAgKEIAAAYigAAgKEIAAAYKtB3bM/lcjp//ryamppUV1enkZERTU9PK5FIaOfO
      nZKk6upqXb16VS0tLUEuDQAoUqABmJiY0PLyshYWFlRXV6ebN2/q+PHjkqRr165Jkvr7+9XR
      0RHksgCANQg0AI8++qhWVlbyt13X1Ztvvqnm5mZVVlbq9OnTam1tVSKRkCR5nidJ8n1f2Ww2
      yFHWjZ/x5bpu2GOsWcZn/jB5nifXdfO/C+XmqzK/qQINwN976aWXJElvvPGGDhw4oO7ubg0N
      DemZZ55RRUWFbNvOf65t28qUcpgSiUQjijlO2GOsWTQSkcP8obFtW47jPPC7UE6+KvObKtAA
      XLt2TRcuXJBlWdq4caPOnTun6upqxeNxSav/Y3d1dam3t1fPPfdckEsDAIoUaACam5vV3Nyc
      v/3iiy/Kdd1/KGwymQxyWQDAGpT8aaAmb68A4GHGdQAAYCgCAACGIgAAYCgCAACGIgAAYCgC
      AACGIgAAYCgCAACGIgAAYKiSvhgcAKD0ppZmdGr0vaK/jgAAMN6lqUv6b3/8j7DHKNq/P/8f
      2pfcp+mlGf2fc/+36K/nFBAAGIoAAIChCAAAGIoAAIChCAAAGIoAAIChCAAAGIoAAIChCAAA
      GCrQAORyOQ0ODmpubk6SND4+rtOnT2tqakp37tzRnTt3lMlkNDo6GuSyAIA1CDQAExMTWl5e
      1sLCgiTp4sWLOnbsmM6dO5cPwKlTp5RMJoNcFgCwBoG+FtCjjz6qlZWV/G3HcWRZlhzHkSSd
      Pn1ara2tSiQSkiTP8yRJvu8rm80GOcq68TO+XNcNe4w1y/jMHybP8+S6bv53odwwf7i+7Pwl
      fQzg/kH9/r/d3d0aHx/P37ZtW7ZtKxKJ5CNRbiLR1dnLdf5ohPnDZNu2HMeRbdthj7ImzB+u
      Lzt/oAG4du2aLly4oAsXLmhmZkaWZen999/P/3Latq2uri719vYGuSwAYA0CPQXU3Nys5ubm
      /O3nn39e6XRa8Xj8gc/jMQAACF/Jnwb69wd/AMDDgesAAMBQBAAADEUAAMBQBAAADEUAAMBQ
      BAAADEUAAMBQBAAADEUAAMBQBAAADEUAAMBQBAAADEUAAMBQBAAADEUAAMBQBAAADEUAAMBQ
      BAAADEUAAMBQBAAADEUAAMBQ0VLe+VtvvaXKykolEgnV1NRIkizL0uzsrNrb20u5NADgC5R0
      B+C6rnbt2qWDBw9KkhYXF3Xx4kUO/gDwEChpAA4dOqS5uTm99tprkqTh4WFt3rw5/3HP8+R5
      nnzfl+u6pRylZPzM6uzlOn/GZ/4weZ4n13XleV7Yo6wJ84fry85f0gDYtq0DBw6osrJSktTR
      0aGVlRVNTU3lP27btiKRiBzHKeUoJROJrs5ervNHI8wfJtu25TiObNsOe5Q1Yf5wfdn5S/oY
      wI0bNzQ0NKQnn3xSiURCktTU1KTLly8rmUyWcmkAwBcoaQCefvrpz/3v+/btK+WyAIAC8DRQ
      ADAUAQAAQxEAADAUAQAAQxEAADAUAQAAQxEAADAUAQAAQxEAADAUAQAAQxEAADDUfwLaUG7u
      Tl/0EQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Sheet 7' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAXDElEQVR4nO3dXWxU95nH8d+ZGXtmbAbb8UuNMbaBBG8oL6aNg7BBvDjStqtt1IigKLRa
      adttaHYrde9Xu6q6vdi73m/a7tWm2hZVVbTpKgIiSMEkDZTaMRCcmgQb4zFjYzPY2ON5OXsR
      xbtssmHsnuMz5vl+bswQM//HxMx3/ufMHDuu67oCAJgTCnoAAEAwCAAAGEUAAMAoAgAARhEA
      ADCKAADwTKFQUC6XC3oMFCkS9AAAHg1jY2P68Y9/rOrqanV2diocDmvDhg164okngh4N/w8C
      AMATU1NTisfj+va3v61YLKYf/vCHcl1Xhw8f1tmzZ5VKpfTyyy9raGhIJ0+eVDQa1Ysvvqif
      //znmp2d1fe+9z1t2rQp6C/DlPAPfvCDHwQ9BIDVr7a2VuXl5XrllVfkOI6ampp06NAhbdu2
      TTMzM0omkwqHw7p8+bK+//3va3h4WLOzs0omk2psbFQ6nda2bduC/jJMYQcAwBO3b9/W2rVr
      deTIEf3ud7/T5s2bNT4+rvn5ed2+fVvd3d3KZDKKx+M6deqUbt26pQ0bNigWi+mZZ57RmjVr
      gv4SzOEkMABPRKNRXbp0SZcvX9aLL76o7u5uDQ8PKxaLKRwOK51Oq729XUePHlV9fb0cx9FT
      Tz2ljo4OnT17NujxTXK4FhCAlfT666+rr69Pu3fvVk9PT9DjmEYAAMCoQM8BZLNZSVI+n9d/
      DNwNchRta4hp2xdigc4AACsp0ACUlZUFufwDwpGwotFo0GMAwIrx/CTw/fv3de7cOUnSyMiI
      Tp48qWQyqampKU1NTSmXy+natWteLwsAWCLPA3D27Fndvfvx4Zy+vj719PTowoULiwE4ceKE
      GhsbvV4WALBEngZgaGhIzc3NKi8vl/Txy8Icx1k8tHLy5EnV1NSoqqrKy2UBAMvgaQAuXLig
      W7duaXBwUDdu3FChUJCkxY/79+/XyMjI4m0AQHA8PQn8wgsvLP66tbVV165d05kzZxZ3AGVl
      Zdq3b59Onz6tQ4cOebk0AGCJfH8fwPz8vGKxz395ZTab1at9d/wc46F2NlWqo4m3ogOww/dL
      QTzswR8AEAyuBQQARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoA
      AIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAA
      GEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBR
      ES/vbHh4WB988IFisZi6urp09epVjY+Pq6qqShs3bpQkJRIJDQ0Nqb293culAQBL5GkA6urq
      1NLSovPnz2tiYkK3bt3SM888I0m6fv26JOntt99WV1eXl8sCAJbB0wBEo1EdP35c8/Pz2rNn
      jzKZjF577TVt2rRJFRUVOnnypHbs2KGqqipJUjablSTl83kvx1iWfC6vTCYT9BgAsGIc13Vd
      r+/0/Pnzam5u1oYNGyRJv/rVr9TR0aFsNqv+/n4dPnxYodD/nH7IZrN6te+O12Msyc6mSnU0
      rQl0BgBYSZ7uAN59911lMhmNjIxoy5Yt+s1vfqNEIqFYLCZJKisr0759+3T69GkdOnTIy6UB
      AEvk+Q5gbm5O0Wh08Rl+JpNRNBr93D/DDgAAVp6nOwBJisfjD9x+2IM/ACAYvA8AAIwiAABg
      FAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYR
      AAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEA
      AKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAw
      igAAgFERL+9seHhYH3zwgWKxmLq6unTz5k1du3ZN27ZtUzQalSQlEgkNDQ2pvb3dy6UBAEvk
      6Q6grq5OPT09CoVCmpiYUF9fn3p6enThwgVNTU1pampKJ06cUGNjo5fLAgCWwdMdQDQa1fHj
      xzU/P689e/YoGo3KcZzFZ/8nT57Ujh07VFVVJUnKZrOSpHw+7+UYy5LP5ZXJZIIeAwBWjKcB
      CIfDev7553X+/HmNjIyoUChI0uLH/fv3q7+/X08//bRCoZDKysq8XP5PEo6EF0MFABZ4egio
      v79fp0+f1uTkpGpra1VfX69Tp05p/fr1isViSiQS+spXvqJ3333Xy2UBAMvguK7renmH2WxW
      kUhEjuNIknK5nCKRz99oZLNZvdp3x8sxlmxnU6U6mtYEOgMArCRPDwFJ+tRhnYc9+AMAgsH7
      AADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQA
      AIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADA
      KAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwi
      AABgFAEAAKMiXt7Z3NycRkdHFQqFtHHjRk1MTGhmZkaxWEzV1dWSpGg0qjt37qiurs7LpQEA
      S+RpAJLJpEKhkIaGhlRZWalLly6pvb1dkjQ2NiZJmpycVG1tLQEAgIB5GoCNGzfq3r17GhgY
      0Nq1a5XJZJRKpdTa2ipJunr1qqLRqDo7OyVJ+XxeklQoFLwcY1kKhYJyuVzQYwDAivH0HMDM
      zIzOnDmj7u5uxeNxHTx4UC0tLXrrrbckSfF4XNlsVq7rerksAGAZPN0BvPPOO9qwYYPS6bQq
      Kip0/fp11dTUKB6PS5La2to0OzurgYEBbd++XeFwWFJp7ABCoZAiEU//OgCgpHn6iLd9+3bN
      zs4u3m5oaNDMzIz27t2raDQqSYrFYkqlUl4uCwBYBk8D0NDQ8MDtT575P+zzAAArj/cBAIBR
      BAAAjCIAAGBUUQG4ePGi33MAAFZYUQE4duyY33MAAFbYkg4BsRMAgEfHkgLATgAAHh3LOglM
      CABg9SsqAF/+8pcf+AgAWP0ctwSuzJbNZvVq351AZ9jZVKmOpjWBzgAAK4n3AQCAUQQAAIxa
      UgBmZu/7NQcAYIUtKQDvXOzX2xf7/ZoFALCCir4c9L2ZWV3ou6Kx8ZRc19Wep3b6ORcAwGcP
      DUC+UNDP/v1XujOV1o2bt+S6Bf3i1/+l6rUJPbll00rMCADwwUMD4DiOGhvqdOm99+W6BTU3
      fUEvfP2rqq+tWYn5AAA+eeg5gJDjqKwsosc3blChUNDffeuoHt/Yoqq1iZWYDwDgk4cG4MbI
      LcVjMf39d/9KX+3Zp+oqHvgB4FHw0ENAX2ioU+uGJknS1/+ix/eBAAAr46E7gFi0fCXmAACs
      sKLfB5DL5TQzMyNJSqfTKhQKvg0FAPBfUe8DcF1XH374of7whz/owIED+vWvf60jR46ourra
      7/lW1H8M/SzoEfTC5m8FPQIAI4p+I9gbb7yhkZER3bt3TxUVFUokHr2TwTdnPwp6BABYMUUF
      wHEcvfTSS3rnnXe0Zs2axd8DAKxeRZ8DmJiY0NmzZ5VKpZRKfXw5CADA6lX0IaBEIqFIJKL6
      +npJ7AAAYLUrOgDl5eXq6OjQ5OSkJLEDAIBVbkkvAx0eHtaNGzfU399PAABglSs6APF4XM89
      95yee+45xeNxZTIZP+cCAPis6ENAc3NzOn78uCRpfHzct4EAACuj6ADE43E9/fTTGhkZ0f79
      +1VZWennXAAAnxV9CCidTuvUqVOqq6vTa6+9prm5OT/nAgD4rOgAzM/PK5FIqLm5WbFYTNls
      1s+5AAA+KyoAruuqvr5eTz75pM6dO6cvfelLWrt2rd+zAQB8VNQ5gI8++kg3b97Uvn37JEm/
      +MUvtLCwoPJyLhUNAKtVUQG4f/++bt++Ldd15bqubt68qXw+7/dsAAAfFRWALVu26Le//a1+
      8pOfKJvNqrm5WfF43O/ZAAA+KioAZWVl+s53vqPbt28rEomorq7O77kAAD4r6iTw+Pi48vm8
      ysvLVV9f/7kXgisUCg/8tLBcLvenTwkA8FxRO4De3l65rqvR0VF1d3dLkjo6OhQKPdiPkZER
      DQ4Oam5uTj09PXr//fc1PT2t+vp6PfbYY3IcR+Xl5RodHdWOHTu8/2oAAEUragdw4MABlZeX
      K5fLaXJyUpOTk595Mbjq6modPHhQ1dXVSqfTSiaTOnDggEZGRjQ/P6/p6Wn19vZqy5Ytnn8h
      AIClKWoHcO7cOT3++OPK5/Pas2ePJH3q2b8krVmzRr///e8lSQ0NDYpEInIcR5HIx8u8/fbb
      am9vVywWk6TFN5OVwiuK8rngZ5DERfYArJiiArB161b98pe/1OjoqG7evClJeumll1RWVvbA
      5w0ODkqSuru75TiOstmsXNddfKDfu3evrl27pnv37imRSHzqzwcpHAkHPYIkKRqNBj0CACOK
      CsCmTZt07NgxDQwMqLGxUa2trZ/54H379m1ls1mdPn1aHR0damxs1JtvvqmWlpbFZ/379+/X
      lStXtHv3bm+/EgDAkhQVgNnZWb3yyitqa2vT8PCw3njjDb388sufOgz0yTuFP1FTU6NcLrd4
      COgTPPgDQPCKOgl85coV7dq1S0eOHNHRo0cVCoV09+7dohb4vw/+AIDSUNSjc1tbm376059q
      7dq1mp+f19TUlBKJhN+zAQB8VNQOoL6+Xt/85jc1PT2tXC6nY8eO8cweAFa5oh/Fm5ub1dzc
      7OcsAIAVVFQAhoaGdPnyZWWzWZWXlyubzerZZ59lFwAAq1hRh4BqampUW1urVCqlJ554QiMj
      I/xEMABY5YoKwGOPPaadO3dqenpak5OTSqfTD1zwDQCw+hQVgHw+r4qKCh09elT5fF5Hjx5V
      RUWF37MBAHxU1EH8P/7xj8pkMjpz5owkqa+vT9/97ndL6lIOAIClKSoAmzdvliQlEgndu3dP
      khQOl8a1cwAAy1NUACKRiKanp/Xqq6+qUCjIdV1t3br1M68ICgBYHYp+Hef8/Lza29uVTqd1
      //59zc7Oqqqqys/ZAAA+KjoADQ0N6urq0vT0tN577z1VVlb6ORcAwGdFH8MJhUJqamrS1q1b
      lcvlSuKHuAAAlq+oHcDU1JR6e3sXb1+6dEmHDx/2bSgAgP+KCkB5ebmampoWb3/jG99QeXm5
      b0MBAPxXVAAqKyu1a9cuv2cBAKwgXscJAEZxOc8SU8hMqLAwGegMofJahaJ1gc4AwH8EoMRk
      7/Qqk3wt0Bmijc8quu7ZQGcA4D8OAQGAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAA
      MIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACM4kdC4jP9wytv
      Brr+xnXV+pu//FKgMwCPOgKAzzTw4e2gRwDgM08D4LquksmkqqqqVFFRoVQqpZmZGcViMVVX
      V0uSotGo7ty5o7q6Oi+XxiMmu5DW5K13A52hrDyhtXV/FugMgJ88DcDo6KguXbqkbdu2aePG
      jbp48aLa29slSWNjY5KkyclJ1dbWEgB8rnuT1/S7//ynQGd4bN1T2v21nwU6A+AnTwOwfv16
      LSwsLN7OZDJKpVJqbW2VJF29elXRaFSdnZ2SpHw+L0kqFApejrEspTCDVBpzlMIMpcB1XeVy
      uaDHAHzj6auAHMd54PbBgwfV0tKit956S5IUj8eVzWbluq6XywIAlsHTHcDU1JSSyaQcx1FD
      Q4OuX7+umpoaxeNxSVJbW5tmZ2c1MDCg7du3KxwOSyqNZ5yhUGm8IrYU5iiFGUqB4ziKRHid
      BB5dnn93r1u3bvHXDQ0NmpmZ0d69exWNRiVJsVhMqVTK62UBAEvkaQBqampUU1OzeLuysvIz
      P6+hocHLZQEAy8BeHwCMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABg
      FAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYR
      AAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARkWCHgAoZUMTKc0uLAQ6w6baOq2J
      RgOdAY8mAgB8jn/tPav3xm4FOsO/fO3r2tG0PtAZ8GjiEBAAGEUAAMAoAgAARhEAADCKAACA
      UQQAAIwiAABgFAEAAKM8DYDruhobG9P9+/clSXfv3tXg4KBmZmY0Nzenubk5FQoFTUxMeLks
      AGAZPA3A6OioLly4oPHxcUlSb2+votGoent7NTY2prGxMV28eFHpdNrLZQEAy+DppSDWr1+v
      hf913ZRIJKLW1lYNDg5Kkq5evapoNKrOzk5JUj6flyQVCgUvx1iWUphBKo05SmGGUuC6rlzX
      DXoMFfJ55XK5oMfAI8jTHYDjOA/c/uQfzycf4/G4stlsSfyjAgDrPN0BTE1NKZlMynEcNTQ0
      KJfL6aOPPlp8wG9ra9Ps7KwGBga0fft2hcNhSaXxjDMUKo3z4aUwRynMUAocx5Ej5+Gf6LNQ
      OKxIhOs2wnuef1etW7du8dfd3d1KJpPq7u5efLCPxWJKpVJeLwsAWCJPA1BTU6OampoHfq+q
      qupTn9fQ0ODlsgCAZWCvDwBGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYR
      AAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEA
      AKMIAAAYFQl6AACf7+7cnH57/YNAZ6iKxbWjqTnQGeA9AgCUuLvzc3oveTPQGVqqHyMAjyAO
      AQGAUQQAAIwiAABgFAEAAKM4CQygKPd/+dfK33w30Bniz/+bIhs6A53hUUIAAKwefxyUJgI+
      cPH4FimRCHYGjxAAAKvHB4NS5H6wMzSue2QCwDkAADCKAACAUQQAAIwiAABgFAEAAKMIAAAY
      RQAAwCgCAABG+fpGsNdff10VFRWqqqpSdXW1JMlxHE1MTKizk7dzA0CQfN0BZDIZbd68Wbt2
      7ZIkpdNp9fX18eAPACXA1x3A7t27lUqldO7cOe3evVsDAwNqbW1d/O/ZbFaSlM/n/RyjKPlc
      8DNIUi6fC3qEkpihFBQKBRXkBj2G8iXw/6PgFlQoFIIeoyRks1kVMpmgx/CErwEoKytTR0eH
      bty4IUnq6urShx9+qGQyqcbGRpWVlfm5/JKEI+GgR5AkRcIRBZ2iSDgiaSHgKYIXCoUUcp2g
      x1A4HPwlu0JOSKFQKPDvzVJQVlYmRaNBj+EJX7+zhoeH1d/fr507d6qqqkqS1NbWpqtXr6qx
      sdHPpQEAD+FrAJ566qnP/P0vfvGLfi4LACgCLwMFAKMIAAAYRQAAwCgCAABGEQAAMCr4FxgD
      wCpyZXxAPzrxt4HO8OQXtukf//xHf/L9sAMAAKMIAAAYxSEgAFiFxn/4z8pcufon3Qc7AAAw
      igAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMI
      AAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAA
      gFG+B2B+ft7vJQAAyxDx885PnDihWCymfD6vlpYWSZLjOJqYmFBnZ6efSwMAHsLXHYDrutq3
      b58WFhYkSel0Wn19fTz4A0AJ8DUAjuN8vEjo42UGBgZUW1vr55IAgCL5GoC5uTm5rqu5uTlJ
      UldXlxYWFpRMJv1cFgBQhP8GHpTW9y/SaaYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Sheet 8' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3deXCVdYLv//dz9nOSk30hO/uiLIKAICI2gkyjNgouLb2PPVW9eHumbs38
      pu9M3d/tW1P1m75zp+9UV9PTPWNr296ZZuxWREURcWlAQEQWMQgGAyEJJCRkOUlOTs76/P7I
      kBZJQthCyPfz+sckZ/smJc/7Wb+PZdu2jYiIGMdxvQcgIiLXhwIgImIoBUBExFCuz35j2zYv
      7PnwmnxQtjPFtJIx1+S9RUTk0rk+/4OTyQt+dFU4HUmKi4uvyXuLiMil0y4gERFDKQAiIoZS
      AEREDKUAiIgYSgEQETGUAiAiYigFQETEUAqAiIihFAAREUMpACIihlIAREQMpQCIiBhKARAR
      MZQCICJiKAVARMRQCoCIiKEUABERQykAIiKGUgBERAylAIiIGEoBEBExlAIgImIoBUBExFAK
      gIiIoRQAERFDKQAiIoZSAEREDKUAiIgYSgEQETGUAiAiYigFQETEUAqAiIihFAAREUMpACIi
      hlIAREQMpQCIiBhKARARMZQCICJiKAVARMRQCoCIiKEUABERQykAIiKGUgBERAylAIiIGEoB
      EBExlAIgImIoBUBExFAKgIiIoRQAERFDKQAiIoZSAEREDKUAiIgYSgEQETGUAiAiYigFQETE
      UAqAiIihFAAREUMpACIihlIAREQMpQCIiBhKARARMZQCICJiKAVARMRQCoCIiKEUABERQykA
      IiKGUgBERAylAIiIGEoBEBExlAIgImIoBUBExFAKgIiIoRQAERFDKQAiIoZSAEREDKUAiIgY
      SgEQETGUAiAiYigFQETEUAqAiIihFAAREUMpACIihlIAREQMpQCIiBhKARARMZQCICJiKAVA
      RMRQCoCIiKEUABERQykAIiKGUgBERAylAIiIGEoBEBExlAIgImIoBUBExFAKgIiIoRQAERFD
      KQAiIoZSAEREDKUAiIgYSgEQETGUAiAiYigFQETEUAqAiIihFAAREUMpACIihlIAREQMpQCI
      iBhKARARMZQCICJiKAVARMRQCoCIiKEUABERQykAIiKGUgBERAylAIiIGEoBEBExlAIgImIo
      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
      c2v7qVSKjo6OQWcCldFLARAxmMPh4N57773ew5DrRMcAREQMpQCIiBhKARARMZQCICJiKAVA
      RMRQCoCIiKEUABERQykAIiKGUgBERAylAIiIGEoBEBExlAIgImIoBUBExFAKgIiIoRQAERFD
      KQAiIoZSAEREDKUAiIgYSgEQETGUAiAiYigFQETEUAqAiIihFAAREUMpACIihlIAREQMpQCI
      iBhKARARMZQCICJiKAVARMRQCoCIiKEUABERQykAIiKGUgBERAylAIiIGEoBEBExlAIgImIo
      BUBExFAKgIiIoRQAERFDKQAiIoZSAEREDKUAiIgYSgEQETGUAiAiYigFQETEUAqAiIihFAAR
      EUMpACIihlIAREQMpQCIiBhKARARMZQCICJiKAVARMRQCoCIiKEUABERQykAIiKGUgBERAyl
      AIiIGEoBEBExlAIgImIoBUBExFAKgIiIoRQAERFDKQAiIoZSAEREDKUAiIgYSgEQETGUAiAi
      YigFQETEUAqAiIihFAAREUMpACIihlIAREQMpQCIiBhKARARMZQCICJiKAVARMRQCoCIiKEU
      ABERQykAIiKGUgBERAylAIiIGEoBEBExlAIgImIoBUBExFAKgIiIoRQAERFDKQAiIoZSAERE
      DKUAiIgYSgEQETGUAiAiYigFQETEUAqAiIihFAAREUMpACIihlIAREQMpQCIiBhKARARMZQC
      ICJiKAVARMRQCoCIiKEUABERQykAIiKGUgBERAylAIiIGEoBEBExlAIgImIoBUBExFAKgIiI
      oRQAERFDKQAiIoZSAEREDKUAiIgYSgEQETGUAiAiYigFQETEUAqAiIihFAAREUMpACIihlIA
      REQMpQCIiBhKARARMZQCICJiKAVARMRQ/z+3pOa4QX/t3wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Top 20 Companies' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
